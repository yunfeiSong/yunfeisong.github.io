<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>Markdown 基础语法</title>
    <link href="/2019/10/10/2022-08-18-markdown/"/>
    <url>/2019/10/10/2022-08-18-markdown/</url>
    
    <content type="html"><![CDATA[<h1 id="基础语法"><a href="#基础语法" class="headerlink" title="基础语法"></a>基础语法</h1><h2 id="标题"><a href="#标题" class="headerlink" title="标题"></a>标题</h2><table> <tr>    <td>语法</td>    <td>效果</td> </tr> <tr>    <td># 标题</td>    <td> #  标题 </td> </tr></table><table><thead><tr><th>语法</th><th>效果</th></tr></thead><tbody><tr><td># 标题</td><td># 标题</td></tr><tr><td><code>-</code></td><td>发送  —</td></tr></tbody></table><h2 id="换行"><a href="#换行" class="headerlink" title="换行"></a>换行</h2><p>两个空格+回车</p><h2 id="段落"><a href="#段落" class="headerlink" title="段落"></a>段落</h2><p>一个以上空行,实现段落效果</p><h2 id="强调"><a href="#强调" class="headerlink" title="强调"></a>强调</h2><h3 id="粗体"><a href="#粗体" class="headerlink" title="粗体"></a>粗体</h3><blockquote><p><strong>加粗字体</strong></p></blockquote><p><code>**加粗字体**</code>、<code>__加粗字体__</code><br>]()</p>]]></content>
    
    
    <categories>
      
      <category>Markdown</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Markdown</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Docker 入门</title>
    <link href="/2019/10/10/Docker/"/>
    <url>/2019/10/10/Docker/</url>
    
    <content type="html"><![CDATA[<h3 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h3><p>docker 基于 <strong>GO</strong> 语言开发实现。<a href="www.docker.com" title="www.docker.com">docker官网</a><br /><br>基于 linux 的 <strong>LXC</strong>（linux container） 技术实现。<br /><br>三大核心概念：<strong>镜像</strong>、<strong>容器</strong>、<strong>仓库</strong>。<br /><br>docker 设计理念借鉴了 <strong>git</strong>，所有有很多相似之处。</p><h3 id="安装（centos7）"><a href="#安装（centos7）" class="headerlink" title="安装（centos7）"></a>安装（centos7）</h3><p>参照<a href="https://docs.docker.com/install/linux/docker-ce/centos/" title="https:&#x2F;&#x2F;docs.docker.com&#x2F;install&#x2F;linux&#x2F;docker-ce&#x2F;centos&#x2F;">官网</a>关于社区版安装步骤：</p><ul><li><p>卸载旧版</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs bash">yum remove docker \<br>              docker-client \<br>              docker-client-latest \<br>              docker-common \<br>              docker-latest \<br>              docker-latest-logrotate \<br>              docker-logrotate \<br>              docker-engine<br><br><span class="hljs-comment">#或者查看是否安装了 docker ：</span><br>yum list docker*<br><br>yum remove docker*<br></code></pre></td></tr></table></figure></li><li><p>安装启动新版</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment">#安装依赖环境</span><br>yum install -y yum-utils device-mapper-persistent-data lvm2<br><span class="hljs-comment">#添加 yum 源</span><br>yum-config-manager --add-repo  https://download.docker.com/linux/centos/docker-ce.repo<br><span class="hljs-comment">#使用 yum 安装</span><br>yum install docker-ce docker-ce-cli containerd.io<br><span class="hljs-comment">#启动 docker</span><br>systemctl start docker<br></code></pre></td></tr></table></figure></li></ul><h3 id="镜像"><a href="#镜像" class="headerlink" title="镜像"></a>镜像</h3><ul><li>操作镜像，可以通过 name 或 id 来操作镜像<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment">#搜索镜像（从dockerhub 远程仓库），带有 official 的是官方镜像</span><br>docker search [参数] 搜索值 ：docker search redis<br><span class="hljs-comment">#获取镜像，使用 pull 命令，不指定 tag 默认拉取 latest 版本，即最新版</span><br>docker [image] pull name[:tag-version] <br><span class="hljs-comment">#查看本地镜像列表</span><br>docker images<br><span class="hljs-comment">#查看指定镜像详细信息/历史记录</span><br>docker inspect/history name<br><span class="hljs-comment">#删除镜像，-f 强制删除，以创建容器的镜像无法被删除</span><br>docker image <span class="hljs-built_in">rm</span> name / docker rmi name<br><span class="hljs-comment">#清除未使用的镜像和临时镜像</span><br>docker image prune<br><span class="hljs-comment">#创建镜像方式一：通过已有容器创建镜像</span><br>docker commit -m <span class="hljs-string">&quot;test&quot;</span> -a <span class="hljs-string">&quot;myName&quot;</span> 容器<span class="hljs-built_in">id</span> 镜像名称:版本<br><span class="hljs-comment">#创建镜像方式二：通过本地模板创建</span><br>docker import 文件 镜像名:版本<br><span class="hljs-comment">#创建镜像方式三：通过 DockerfIle 创建</span><br>docker build filename<br><span class="hljs-comment">#导出镜像到本地文件</span><br>docker save -o filename 镜像名：tag名 / 镜像<span class="hljs-built_in">id</span><br><span class="hljs-comment">#从本地文件导入镜像</span><br>docker load -i filename<br><span class="hljs-comment">#上传镜像到 dockerhub，类似于 git push 操作</span><br>docker login <span class="hljs-comment">#登陆 dockerhub 账号</span><br><span class="hljs-comment">#给要上传的镜像打 tag，格式为：dockerhub账号名/镜像名:tag版本</span><br>docker tag image-name:tag dockerhub-name/image-name:tag<br><span class="hljs-comment">#push 到 dockerhub 上，类似 github</span><br>docker push dockerhub-name/image-name:tag<br></code></pre></td></tr></table></figure></li></ul><h3 id="容器"><a href="#容器" class="headerlink" title="容器"></a>容器</h3><ul><li>操作容器，可以通过 name 或 id 来操作容器<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment">#查看容器，-a 全部，-l，默认选项，只列出运行中的容器</span><br>docker ps -a/-l <br><span class="hljs-comment">#查看容器完整信息，json 格式</span><br>docker inspect name/id<br><span class="hljs-comment">#查看容器内进程</span><br>docker top name/id<br><span class="hljs-comment">#查看容器运行状态</span><br>docker stats name/id<br><span class="hljs-comment">#创建容器，处于停止状态，未运行，--help 查看完成参数列表</span><br>docker create -it nginx:latest<br><span class="hljs-comment">#启动容器，以指定 id 或 nme 启动容器</span><br>docker start <span class="hljs-built_in">id</span>/name <br><span class="hljs-comment">#创建并运行容器，-d 在后台运行，-p 将容器内部端口（右）映射到物理主机上（左），等价于 create + start</span><br>docker run -it -d --name mynginx -p 8888:80 nginx<br><span class="hljs-comment">#停止容器</span><br>docker stop <span class="hljs-built_in">id</span>/name<br><span class="hljs-comment">#暂停/取消暂停容器</span><br>docker pause/unpause <span class="hljs-built_in">id</span>/name<br><span class="hljs-comment">#重启容器</span><br>docker restart <span class="hljs-built_in">id</span>/name<br><span class="hljs-comment">#进入容器方式一，不推荐使用，可能会造成容器终止运行</span><br>docker attach <span class="hljs-built_in">id</span>/name<br><span class="hljs-comment">#进入容器方式二，exec 后接两个参数，第一个为容器 id 或 name，第二个为要执行的命令</span><br>docker <span class="hljs-built_in">exec</span> -it <span class="hljs-built_in">id</span>/name /bin/bash<br><span class="hljs-comment">#删除容器</span><br>docker <span class="hljs-built_in">rm</span> <span class="hljs-built_in">id</span>/name<br><span class="hljs-comment">#导出容器</span><br>docker <span class="hljs-built_in">export</span> -o filename <span class="hljs-built_in">id</span>/name<br><span class="hljs-comment">#导入文件到本地镜像库，导入的是容器快照文件，docker load 是导入完整的镜像文件</span><br>docker import filename -- dongliulin/mynginx:v1<br><span class="hljs-comment">#复制文件到容器中</span><br>docker <span class="hljs-built_in">cp</span> filename <span class="hljs-built_in">id</span>/name:路径<br><span class="hljs-comment">#查看容器端口映射情况</span><br>docker port <span class="hljs-built_in">id</span>/name<br><span class="hljs-comment">#更改容器配置，--help 查看参数列表</span><br>docker update <span class="hljs-built_in">id</span>/name<br><br><span class="hljs-comment"># --rm 在容器运行结束后立即删除容器，不能与 -d 同时使用</span><br>docker run -it --<span class="hljs-built_in">rm</span> nginx nginx<br></code></pre></td></tr></table></figure></li></ul><h3 id="仓库"><a href="#仓库" class="headerlink" title="仓库"></a>仓库</h3><blockquote><p>公有仓库</p></blockquote><p><a href="https://hub.docker.com/" title="hub.docker.com">dockerHub</a> 是 docker 官方的公有仓库</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment">#在公有仓库中搜索镜像</span><br>docker search name<br><span class="hljs-comment">#拉取镜像，不指定 tag 默认拉取最新版本，即 latest 版本</span><br>docker pull name[:tag]<br><span class="hljs-comment">#登录 docker hub，将本地镜像上传到 docker hub 进行托管</span><br>docker login <span class="hljs-comment">#输入用户名密码进行验证</span><br><span class="hljs-comment">#推送本地镜像</span><br>docker push name:tag<br></code></pre></td></tr></table></figure><blockquote><p>私有仓库</p></blockquote><p>dockerHub上提供有 <strong>registry</strong> 镜像，可搭建本地私有仓库</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment">#拉取并启动 registry 镜像版本 2，映射到本地 5000 端口，私有仓库已搭建完成</span><br>docker run -it -d -p 5000:5000 registry:2<br><span class="hljs-comment">#上传镜像到私有仓库，先将本地镜像打上标签，标签名为：私有仓库物理机的 IP：端口号/镜像名</span><br>docker tag name 私有仓库 IP：端口/name<br><span class="hljs-comment">#将刚刚标签的镜像上传到私有仓库</span><br>docker push name<br><br><span class="hljs-comment">#高版本的 docker 默认使用 ssl 连接，即 https，本地私有仓库为 http 协议，</span><br><span class="hljs-comment">#可以配置 ssl 证书，或者让客户机信任私有仓库所在物理机的 ip 地址：</span><br>vim /etc/docker/daemon.json<br>写入:<br>&#123;<br><span class="hljs-comment">#值为私有仓库物理机的 ip:端口，多个用 “，” 分隔</span><br><span class="hljs-string">&quot;insecure-registries&quot;</span>: [<span class="hljs-string">&quot;192.168.1.154:5000&quot;</span>]<br>&#125;<br><span class="hljs-comment">#重启 docker 使配置生效</span><br>systemctl daemon-reload<br>systemctl restart docker<br></code></pre></td></tr></table></figure><h3 id="数据管理"><a href="#数据管理" class="headerlink" title="数据管理"></a>数据管理</h3><blockquote><p>数据卷<br /><br>可供容器使用的特殊目录，将物理机目录映射入容器中，实现数据的共享<br /><br>创建的卷存储在 <strong>&#x2F;var&#x2F;lib&#x2F;docker&#x2F;volumes&#x2F;</strong> 路径下。</p></blockquote><ul><li><p>操作数据卷</p><p>#创建&#x2F;删除&#x2F;清除未引用的&#x2F;查看详细信息&#x2F;查看卷列表<br>docker volume create&#x2F;rm&#x2F;prune&#x2F;inspect&#x2F;ls volume_name</p></li><li><p>绑定数据卷</p></li></ul><p>指在运行容器时指定本地路径映射到容器中的指定路径，所创建的数据卷类型。</p><pre><code class="hljs">#-v 指定数据卷绑定映射到容器，本地路径:容器路径，nginx 容器启动时，需执行：nginx -g &#39;daemon off;&#39; 命令，#使 nginx 运行在前台，否则容器无法一直运行，在启动后会立即退出，ro 代表只读，即容器内不能修改数据卷中#也就是物理机目录的文件，默认的是 rw 读写docker run -it -d -p 8008:80 -v /root/webapp:/opt/webapp:ro\192.168.1.154:5000/mynginx nginx -g &#39;daemon off;&#39;</code></pre><blockquote><p>数据卷容器<br /><br>在物理机上创建数据卷，并挂载到容器中，该容器称为数据卷容器，其他容器可以在运行时直接通过<br><code>--volumes-from 容器 name</code> 参数挂载同一个数据卷。</p></blockquote><ul><li><p>创建数据卷容器</p><p>#运行容器前，会在物理机创建数据卷，名称为一个随机长字符串，并挂载到容器的 &#x2F;volumedb 目录下，<br>#在容器内修改该目录，文件会保存在数据卷中，其他容器挂载该数据卷可实现数据共享</p><h1 id="v-后参数少了左半部分，即没有指定物理机路径，此时使用的是默认路径，"><a href="#v-后参数少了左半部分，即没有指定物理机路径，此时使用的是默认路径，" class="headerlink" title="-v 后参数少了左半部分，即没有指定物理机路径，此时使用的是默认路径，"></a>-v 后参数少了左半部分，即没有指定物理机路径，此时使用的是默认路径，</h1><p>#&#x2F;var&#x2F;lib&#x2F;docker&#x2F;volumes&#x2F;xxxxx，此处只指定了容器内挂载的路径<br>docker run -itdP –name base_volume -v &#x2F;volumedb centos<br>#运行新容器，并通过数据卷容器挂载数据卷<br>docker run -itdP –name test –volumes-from base_volume nginx<br>#通过已挂载数据卷容器的容器，挂载相同的数据卷<br>docker run -itdP –name test1 –volumes-from test nginx</p></li><li><p>数据备份与还原</p></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment">#备份数据卷容器中的数据，运行新容器，将本地路径 /data/backup 挂载到容器内</span><br><span class="hljs-comment">#/data/backup 路径，通过需要备份的数据卷容器挂载数据卷，</span><br><span class="hljs-comment">#将数据卷中的内容打包备份到 /data/backup 路径下，打包的同时，物理机上 /data/backup</span><br><span class="hljs-comment">#下，也有了备份文件</span><br>docker run -itdP --name backup -v /data/backup:/data/backup\<br>--volumes-from base_volume centos tar cvf /data/backup/backup.tar /volumedb<br><br><span class="hljs-comment">#还原备份的文件，创建新容器，挂载本地保存备份文件的路径，并在容器内，解压文件</span><br>docker run -itdP --name revert -v /data/backup:/data/backup centos\<br>tar xvf /data/backup/backup.tar<br></code></pre></td></tr></table></figure><h3 id="端口映射和容器互联"><a href="#端口映射和容器互联" class="headerlink" title="端口映射和容器互联"></a>端口映射和容器互联</h3><ul><li>端口映射<br><br>在执行 <code>docker run</code> 时，添加 <code>-p/-P</code> 参数，指定端口映射，只能一对一，可指定多对，<br /><br>未指定端口，无法从外部访问容器内端口</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment">#-p 后指定端口映射关系，物理机端口：容器内端口，-P 参数随机指定物理机端口映射到容器内的 80 端口</span><br>docker run -itd -p 8080:80 nginx nginx<br><span class="hljs-comment">#在物理机上，不进入容器，查看容器的日志信息</span><br>docker logs -f 容器 <span class="hljs-built_in">id</span>/name<br><span class="hljs-comment">#查看容器的端口映射关系</span><br>docker port 容器 <span class="hljs-built_in">id</span>/name<br></code></pre></td></tr></table></figure><ul><li>容器互联<br /><br>在执行 <code>docker run</code> 时，添加 <code>--link</code> 参数，指定要链接到的容器名，在新建的容器内，即可访问链接到的容器，<strong>互联仅单方向可行，被链容器无法访问链接容器</strong></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># --link 后跟要连接的容器名:别名，之后在容器内可通过别名访问被链接的容器</span><br>docker run -itdP --<span class="hljs-built_in">link</span> base_volume:bv nginx nginx<br><span class="hljs-comment">#安装 ping 指令，测试</span><br>apt-get install -y iputils-ping <br>ping bv<br></code></pre></td></tr></table></figure><h3 id="Dockerfile-构建镜像"><a href="#Dockerfile-构建镜像" class="headerlink" title="Dockerfile 构建镜像"></a>Dockerfile 构建镜像</h3><ul><li><p>Dockerfile 文本配置文件，可以自定义镜像，创建文件，文件名为 Dockerfile 即可。</p><p>#使用 “#” 作为注释行<br>#声明父镜像，必须以 FORM 开头<br>FROM nginx:latest<br>#执行的命令<br>RUN apt-get update &amp;&amp; apt-get install vim -y &amp;&amp; apt-get install iputils-ping -y<br>#创建数据卷，挂载到容器的 &#x2F;root&#x2F;webapp 目录下<br>VOLUME [“&#x2F;root&#x2F;webapp”]<br>#创建容器后，执行的命令<br>CMD [“nginx”, “-g”, “daemon off;”]</p></li><li><p>使用 <code>docker build</code> 命令，构建镜像</p><p>#Dockerfile 文件放置在 &#x2F;root&#x2F;docker.conf&#x2F; 路径下，-t 指定生成的镜像的名称和版本号<br>docker build -t dongliulin&#x2F;mynginx:1.0 &#x2F;root&#x2F;docker.conf&#x2F;</p></li></ul><h3 id="常用镜像"><a href="#常用镜像" class="headerlink" title="常用镜像"></a>常用镜像</h3><ul><li><p>alpine<br>迷你版的 linux 系统，适合作为基础镜像，体积小，支持 linux 指令多，支持 <code>apk</code> 安装命令</p><p>#拉取镜像<br>docker pull alpine<br>#运行容器<br>docker run -itd –name test_alpine alpine<br>#进入容器<br>docker exec -it alpine容器 id sh</p></li></ul><h3 id="容器安装-ssh-服务"><a href="#容器安装-ssh-服务" class="headerlink" title="容器安装 ssh 服务"></a>容器安装 ssh 服务</h3><p>以 alpine 为基础镜像，创建容器，并安装 ssh 服务，通过 ssh 访问容器。</p><pre><code class="hljs">#启动 alpine 容器，指定端口映射docker run -it -name alpine-ssh alpine#容器内安装 openssh、openssh-server、openrcapk add openssh openssh-server openrc#添加开机启动，alpine 中未安装 bash，使用 openrc 代替rc-update add sshd#查看 sshd 状态rc-status#生成 softlevel 文件mkdir -p /run/openrc/touch /run/openrc/softlevel#重置 root 用户密码passwd#修改 ssh 配置文件，放开注释行，primitrootlogin 修改参数为 yes ，开启 root 登陆认证vi /etc/sshd/sshd_config#启动 ssh 服务/etc/init.d/sshd start#将运行的容器打包生成新的镜像，包含 ssh 服务docker commit -m &quot;alpine-ssh&quot; 容器 id 192.168.1.154:5000/alpine-ssh:1.0.0#使用包含 ssh 服务的 alpine 的镜像，创建容器，此时容器内的 ssh 服务处于损坏状态docker run -itd --name alpine-sshd -p 8022:22 192.168.1.154:5000/alpine-ssh:1.0.0#重启容器内的 ssh 服务docker exec 容器 id /etc/init.d/sshd restart</code></pre>]]></content>
    
    
    <categories>
      
      <category>Docker</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Docker</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>FFmpeg 常用命令</title>
    <link href="/2019/10/10/ffmpeg%20%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/"/>
    <url>/2019/10/10/ffmpeg%20%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/</url>
    
    <content type="html"><![CDATA[<h6 id="合并音频，重叠"><a href="#合并音频，重叠" class="headerlink" title="合并音频，重叠"></a>合并音频，重叠</h6><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs stylus">ffmpeg -<span class="hljs-selector-tag">i</span> C:\Users\Administrator\Desktop\luyin<span class="hljs-selector-class">.mp3</span> -<span class="hljs-selector-tag">i</span> C:\Users\Administrator\Desktop\古典一合成<span class="hljs-selector-class">.mp3</span> -filter_complex amerge -ac <span class="hljs-number">2</span> -c:<span class="hljs-selector-tag">a</span> libmp3lame -<span class="hljs-selector-tag">q</span>:<span class="hljs-selector-tag">a</span> <span class="hljs-number">4</span> C:\Users\Administrator\Desktop\合成.mp3<br></code></pre></td></tr></table></figure><h6 id="拼接音频，有点问题，后续拼接的音频-header-丢失"><a href="#拼接音频，有点问题，后续拼接的音频-header-丢失" class="headerlink" title="拼接音频，有点问题，后续拼接的音频 header 丢失"></a>拼接音频，有点问题，后续拼接的音频 header 丢失</h6><figure class="highlight nix"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs nix">ffmpeg <span class="hljs-operator">-</span>i <span class="hljs-string">&quot;concat:C:<span class="hljs-char escape_">\U</span>sers<span class="hljs-char escape_">\A</span>dministrator<span class="hljs-char escape_">\D</span>esktop<span class="hljs-char escape_">\古</span>典二.mp3|C:<span class="hljs-char escape_">\U</span>sers<span class="hljs-char escape_">\A</span>dministrator<span class="hljs-char escape_">\D</span>esktop<span class="hljs-char escape_">\古</span>典二.mp3&quot;</span> <span class="hljs-operator">-</span>c copy C:\Users\Administrator\Desktop\古典二和.mp3<br></code></pre></td></tr></table></figure><h6 id="拼接音频，末尾追加"><a href="#拼接音频，末尾追加" class="headerlink" title="拼接音频，末尾追加"></a>拼接音频，末尾追加</h6><figure class="highlight nix"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs nix">ffmpeg <span class="hljs-operator">-</span>f concat <span class="hljs-operator">-</span>safe <span class="hljs-number">0</span> <span class="hljs-operator">-</span>i C:\Users\Administrator\Desktop\list.txt <span class="hljs-operator">-</span>c copy <span class="hljs-string">&quot;C:<span class="hljs-char escape_">\U</span>sers<span class="hljs-char escape_">\A</span>dministrator<span class="hljs-char escape_">\D</span>esktop<span class="hljs-char escape_">\平</span>缓一合成.mp3&quot;</span><br></code></pre></td></tr></table></figure><h6 id="list-txt-内容"><a href="#list-txt-内容" class="headerlink" title="list.txt 内容"></a>list.txt 内容</h6><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs csharp"><span class="hljs-keyword">file</span> <span class="hljs-string">&#x27;C:\Users\Administrator\Desktop\古典二.mp3&#x27;</span><br><span class="hljs-keyword">file</span> <span class="hljs-string">&#x27;C:\Users\Administrator\Desktop\古典二.mp3&#x27;</span><br><span class="hljs-keyword">file</span> <span class="hljs-string">&#x27;C:\Users\Administrator\Desktop\古典二.mp3&#x27;</span><br><span class="hljs-keyword">file</span> <span class="hljs-string">&#x27;C:\Users\Administrator\Desktop\古典二.mp3&#x27;</span><br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>FFmpeg</category>
      
    </categories>
    
    
    <tags>
      
      <tag>FFmpeg</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Bootstrap-Table 行编辑</title>
    <link href="/2019/10/10/bootstrap-table%20%E8%A1%8C%E7%BC%96%E8%BE%91/"/>
    <url>/2019/10/10/bootstrap-table%20%E8%A1%8C%E7%BC%96%E8%BE%91/</url>
    
    <content type="html"><![CDATA[<h3 id="bootstrap-table-行编辑"><a href="#bootstrap-table-行编辑" class="headerlink" title="bootstrap-table 行编辑"></a>bootstrap-table 行编辑</h3><h4 id="html-代码"><a href="#html-代码" class="headerlink" title="html 代码"></a>html 代码</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;container&quot;</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;asset_title&quot;</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;asset_left&quot;</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">span</span>&gt;</span>考试管理信息<span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;asset_right&quot;</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">ul</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">li</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;w80&quot;</span> <span class="hljs-attr">onclick</span>=<span class="hljs-string">&quot;insertRow()&quot;</span>&gt;</span>添加试题<span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">ul</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;myTabContent&quot;</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;tab-content tab-second &quot;</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">table</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;tableOne&quot;</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;text-nowrap&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">table</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br></code></pre></td></tr></table></figure><h4 id="js-代码"><a href="#js-代码" class="headerlink" title="js 代码"></a>js 代码</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br></pre></td><td class="code"><pre><code class="hljs javascript">&lt;script type=<span class="hljs-string">&quot;text/javascript&quot;</span>&gt;<br>$(<span class="hljs-keyword">function</span>(<span class="hljs-params"></span>)&#123;<br><span class="hljs-title function_">initTable</span>();<br><span class="hljs-comment">//保存</span><br>$(<span class="hljs-string">&quot;#saveExamPaper&quot;</span>).<span class="hljs-title function_">bind</span>(<span class="hljs-string">&quot;click&quot;</span>,<span class="hljs-keyword">function</span>(<span class="hljs-params"></span>)&#123;<br><span class="hljs-keyword">var</span> rows = $(<span class="hljs-string">&#x27;#tableOne&#x27;</span>).<span class="hljs-title function_">bootstrapTable</span>(<span class="hljs-string">&#x27;getData&#x27;</span>,<span class="hljs-literal">false</span>);<br><span class="hljs-keyword">for</span>(i=<span class="hljs-number">0</span>;i&lt;rows.<span class="hljs-property">length</span>;i++)&#123;<br>        <span class="hljs-keyword">if</span>(rows[i].<span class="hljs-property">qubankId</span> == <span class="hljs-literal">null</span>)&#123;<br>        <span class="hljs-title function_">dialog</span>(<span class="hljs-string">&quot;请先选择题库！&quot;</span>);<br>            <span class="hljs-keyword">return</span>;<br>        &#125;<br>        <span class="hljs-keyword">if</span>(rows[i].<span class="hljs-property">radioCount</span> &lt;= <span class="hljs-number">0</span> || rows[i].<span class="hljs-property">multiCount</span> &lt;= <span class="hljs-number">0</span> || rows[i].<span class="hljs-property">judgeCount</span> &lt;= <span class="hljs-number">0</span> || rows[i].<span class="hljs-property">saqCount</span> &lt;= <span class="hljs-number">0</span>)&#123;<br>     <span class="hljs-title function_">dialog</span>(<span class="hljs-string">&quot;题目数量不能为零！&quot;</span>);<br>         <span class="hljs-keyword">return</span>;<br>     &#125;<br>&#125;<br>$(<span class="hljs-string">&quot;#form&quot;</span>).<span class="hljs-title function_">ajaxSubmit</span>(&#123;<br><span class="hljs-attr">type</span>: <span class="hljs-string">&quot;POST&quot;</span>,<span class="hljs-comment">//方法类型</span><br>        <span class="hljs-attr">dataType</span>: <span class="hljs-string">&#x27;json&#x27;</span>,<span class="hljs-comment">//预期服务器返回的数据类型</span><br>        <span class="hljs-attr">url</span>: <span class="hljs-string">&quot;&lt;%=basePath%&gt;examPaperWeb/addOrEdit.so&quot;</span>,<br>        <span class="hljs-attr">async</span>: <span class="hljs-literal">true</span>,<br>        <span class="hljs-attr">success</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">result</span>) &#123;<br>            <span class="hljs-keyword">if</span>(result.<span class="hljs-property">success</span>)&#123;<span class="hljs-comment">//保存成功跳转到列表页面</span><br>                $.<span class="hljs-title function_">each</span>(rows, <span class="hljs-keyword">function</span>(<span class="hljs-params">index, e</span>)&#123;<br>                    e.<span class="hljs-property">paperId</span> = result.<span class="hljs-property">data</span>;<span class="hljs-comment">//为考试题库赋值试卷id</span><br>                    &#125;);<br>            $.<span class="hljs-title function_">ajax</span>(&#123;<br>        <span class="hljs-attr">type</span>: <span class="hljs-string">&quot;POST&quot;</span>,<span class="hljs-comment">//方法类型</span><br>                <span class="hljs-attr">dataType</span>: <span class="hljs-string">&#x27;json&#x27;</span>,<span class="hljs-comment">//预期服务器返回的数据类型</span><br>                <span class="hljs-attr">url</span>: <span class="hljs-string">&quot;&lt;%=basePath%&gt;examRepoWeb/addOrEdit.so&quot;</span>,<br>                <span class="hljs-attr">data</span>: &#123;<span class="hljs-attr">lists</span>: rows&#125;,<br>                <span class="hljs-attr">async</span>: <span class="hljs-literal">true</span>,<br>                <span class="hljs-attr">success</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">result</span>) &#123;<br>                    <span class="hljs-keyword">if</span>(result.<span class="hljs-property">success</span>)&#123;<span class="hljs-comment">//保存成功跳转到列表页面</span><br>                        <br>                        url = <span class="hljs-string">&quot;&lt;%=basePath%&gt;examPaperWeb/listPage.so&quot;</span>;<br>                   <span class="hljs-title function_">dialogUrl</span>(result.<span class="hljs-property">message</span>, url);<br>            &#125;<span class="hljs-keyword">else</span>&#123;<br>            <span class="hljs-title function_">dialog</span>(result.<span class="hljs-property">message</span>);<br>            &#125;<br>                    &#125;,<br>                    error : <span class="hljs-keyword">function</span>(<span class="hljs-params"></span>) &#123;<br>                    <span class="hljs-title function_">dialog</span>(<span class="hljs-string">&quot;系统异常，请联系管理员！&quot;</span>);<br>                    &#125;<br>            &#125;);<br>    &#125;<span class="hljs-keyword">else</span>&#123;<br>    <span class="hljs-title function_">dialog</span>(result.<span class="hljs-property">message</span>);<br>    &#125;<br>            &#125;,<br>            error : <span class="hljs-keyword">function</span>(<span class="hljs-params"></span>) &#123;<br>            <span class="hljs-title function_">dialog</span>(<span class="hljs-string">&quot;系统异常，请联系管理员！&quot;</span>);<br>            &#125;<br>    &#125;);<br><span class="hljs-comment">//删除已关联的题库关联关系</span><br><span class="hljs-keyword">if</span>(rowList &amp;&amp; rowList.<span class="hljs-property">length</span>&gt;<span class="hljs-number">0</span>)&#123;<br>$.<span class="hljs-title function_">ajax</span>(&#123;<br><span class="hljs-attr">type</span>: <span class="hljs-string">&quot;POST&quot;</span>,<span class="hljs-comment">//方法类型</span><br>        <span class="hljs-attr">dataType</span>: <span class="hljs-string">&#x27;json&#x27;</span>,<span class="hljs-comment">//预期服务器返回的数据类型</span><br>        <span class="hljs-attr">url</span>: <span class="hljs-string">&quot;&lt;%=basePath%&gt;examRepoWeb/delByIds.so&quot;</span>,<br>        <span class="hljs-attr">data</span>: <span class="hljs-string">&quot;rowList=&quot;</span>+rowList,<br>        <span class="hljs-attr">async</span>: <span class="hljs-literal">true</span>,<br>        <span class="hljs-attr">success</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">result</span>) &#123;<br>            <span class="hljs-keyword">if</span>(!result.<span class="hljs-property">success</span>)&#123;<span class="hljs-comment">//保存成功跳转到列表页面</span><br>    <span class="hljs-title function_">dialog</span>(result.<span class="hljs-property">message</span>);<br>    &#125;<br>            &#125;,<br>            error : <span class="hljs-keyword">function</span>(<span class="hljs-params"></span>) &#123;<br>            <span class="hljs-title function_">dialog</span>(<span class="hljs-string">&quot;系统异常，请联系管理员！&quot;</span>);<br>            &#125;<br>    &#125;);<br>&#125;<br>&#125;);<br><br><span class="hljs-comment">//取消</span><br>$(<span class="hljs-string">&quot;#return&quot;</span>).<span class="hljs-title function_">click</span>(<span class="hljs-keyword">function</span>(<span class="hljs-params"></span>)&#123;<br><span class="hljs-variable language_">window</span>.<span class="hljs-property">location</span>.<span class="hljs-property">href</span>=<span class="hljs-string">&quot;&lt;%=basePath%&gt;examPaperWeb/listPage.so&quot;</span>;<br><br>&#125;);<br>&#125;);<br><br><span class="hljs-comment">//选择题库弹窗</span><br><span class="hljs-keyword">function</span> <span class="hljs-title function_">choiceQU</span>(<span class="hljs-params">index, qubankId, id</span>)&#123;<br><span class="hljs-keyword">var</span> obj = &#123;&#125;;<br>obj.<span class="hljs-property">choiceNum</span> = qubankId;<br><span class="hljs-keyword">var</span> url = <span class="hljs-string">&quot;&lt;%=basePath%&gt;examPaperWeb/quBankPage.so&quot;</span>;<br><span class="hljs-keyword">var</span> win = <span class="hljs-title function_">showModalDialog</span>(url,obj,<span class="hljs-string">&quot;scroll:yes;status:no;dialogWidth:800px;dialogHeight:450px&quot;</span>);<br><br><span class="hljs-keyword">if</span> (win != <span class="hljs-literal">null</span>) &#123;<span class="hljs-comment">//重新选择题库，题目设置清零</span><br>$(<span class="hljs-string">&quot;#tableOne&quot;</span>).<span class="hljs-title function_">bootstrapTable</span>(<span class="hljs-string">&#x27;updateRow&#x27;</span>, &#123;<span class="hljs-attr">index</span>: index, <span class="hljs-attr">replace</span>:<span class="hljs-literal">true</span>, <span class="hljs-attr">row</span>:&#123;<br><span class="hljs-attr">id</span>: id,<br><span class="hljs-attr">qubankId</span>: win[<span class="hljs-number">0</span>],<br><span class="hljs-attr">qubankTitle</span>: win[<span class="hljs-number">1</span>],<br>          <span class="hljs-attr">radioCount</span>: <span class="hljs-number">0</span>,<br>          <span class="hljs-attr">radioScore</span>: <span class="hljs-number">0</span>,<br>          <span class="hljs-attr">multiCount</span>: <span class="hljs-number">0</span>,<br>          <span class="hljs-attr">multiScore</span>: <span class="hljs-number">0</span>,<br>          <span class="hljs-attr">judgeCount</span>: <span class="hljs-number">0</span>,<br>          <span class="hljs-attr">judgeScore</span>: <span class="hljs-number">0</span>,<br>          <span class="hljs-attr">saqCount</span>: <span class="hljs-number">0</span>,<br>          <span class="hljs-attr">saqScore</span>: <span class="hljs-number">0</span><br>&#125;&#125;);<br>&#125;<br>&#125;<br><br><span class="hljs-comment">//获取查询参数</span><br><span class="hljs-keyword">function</span> <span class="hljs-title function_">queryParams</span>(<span class="hljs-params">params</span>) &#123;<br><span class="hljs-keyword">var</span> quarP=&#123;<br>        pageSize : params.<span class="hljs-property">pageSize</span>, <span class="hljs-comment">// 每页显示数量</span><br>        pageNo : params.<span class="hljs-property">pageNumber</span>, <span class="hljs-comment">// 当前页</span><br>        paperId : $(<span class="hljs-string">&#x27;#id&#x27;</span>).<span class="hljs-title function_">val</span>()<br>    &#125;<br>    <span class="hljs-keyword">return</span> quarP;<br>&#125;<br><br><span class="hljs-comment">//初始话表格</span><br><span class="hljs-keyword">function</span>  <span class="hljs-title function_">initTable</span>(<span class="hljs-params"></span>)&#123;<br><span class="hljs-comment">//先销毁表格</span><br>$(<span class="hljs-string">&#x27;#tableOne&#x27;</span>).<span class="hljs-title function_">bootstrapTable</span>(<span class="hljs-string">&#x27;destroy&#x27;</span>);<br><span class="hljs-comment">//表格数据</span><br>$(<span class="hljs-string">&#x27;#tableOne&#x27;</span>).<span class="hljs-title function_">bootstrapTable</span>(&#123;<br>        <span class="hljs-attr">method</span>: <span class="hljs-string">&#x27;post&#x27;</span>,<br>        <span class="hljs-attr">contentType</span>:<span class="hljs-string">&#x27;application/x-www-form-urlencoded; charset=UTF-8&#x27;</span>,<br>        <span class="hljs-attr">url</span>: <span class="hljs-string">&#x27;&lt;%=basePath%&gt;examRepoWeb/listByPaperId.so&#x27;</span>,<br>        <span class="hljs-attr">striped</span>: <span class="hljs-literal">true</span>,<span class="hljs-comment">//使表格带有条纹</span><br>        <span class="hljs-attr">pagination</span>: <span class="hljs-literal">true</span>,<span class="hljs-comment">//在表格底部显示分页工具栏</span><br>        <span class="hljs-attr">sortable</span>:<span class="hljs-literal">true</span>,<br>        <span class="hljs-attr">sortOrder</span>: <span class="hljs-string">&quot;asc&quot;</span>,<br>        <span class="hljs-attr">clickEdit</span>: <span class="hljs-literal">true</span>,<br>        <span class="hljs-attr">pageSize</span>: <span class="hljs-number">5</span>,<br>        <span class="hljs-attr">pageList</span>: customPageList,<br>        <span class="hljs-attr">paginationShowPageGo</span>: <span class="hljs-literal">true</span>,<span class="hljs-comment">//显示跳转页码</span><br>        <span class="hljs-attr">sidePagination</span>: <span class="hljs-string">&quot;server&quot;</span>,<span class="hljs-comment">//表格分页的位置</span><br>        <span class="hljs-attr">search</span>: <span class="hljs-literal">false</span>,          <span class="hljs-comment">//是否显示表格搜索，此搜索是客户端搜索，不会进服务端</span><br>        <span class="hljs-attr">showColumns</span>: <span class="hljs-literal">false</span>,     <span class="hljs-comment">//是否显示所有的列</span><br>        <span class="hljs-attr">minimunCountColumns</span>: <span class="hljs-number">2</span>,<br>        <span class="hljs-attr">showColumns</span>: <span class="hljs-literal">false</span>, <span class="hljs-comment">//显示隐藏列  </span><br>        <span class="hljs-attr">showRefresh</span>: <span class="hljs-literal">false</span>,  <span class="hljs-comment">//显示刷新按钮</span><br>        silent : <span class="hljs-literal">true</span>,      <span class="hljs-comment">// 必须设置刷新事件</span><br>        <span class="hljs-attr">singleSelect</span>: <span class="hljs-literal">false</span>,<span class="hljs-comment">//复选框只能选择一条记录</span><br>        <span class="hljs-comment">//clickToSelect: true,//点击行即可选中单选/复选框</span><br>        <span class="hljs-attr">queryParams</span>: queryParams, <span class="hljs-comment">//参数</span><br>        <span class="hljs-attr">queryParamsType</span>: <span class="hljs-string">&quot;&quot;</span>, <span class="hljs-comment">//参数格式,发送标准的RESTFul类型的参数请求</span><br>        <span class="hljs-attr">columns</span>:[<br>                 &#123;<span class="hljs-attr">title</span>: <span class="hljs-string">&#x27;序号&#x27;</span>,<span class="hljs-attr">field</span>: <span class="hljs-string">&#x27;index&#x27;</span>,<span class="hljs-attr">align</span>: <span class="hljs-string">&#x27;center&#x27;</span>,<span class="hljs-attr">width</span>:<span class="hljs-string">&#x27;50px&#x27;</span>,<span class="hljs-attr">formatter</span>:<span class="hljs-keyword">function</span>(<span class="hljs-params">value, row, index</span>)&#123;<br>                <span class="hljs-keyword">var</span> pageSize = $(<span class="hljs-string">&#x27;#tableOne&#x27;</span>).<span class="hljs-title function_">bootstrapTable</span>(<span class="hljs-string">&#x27;getOptions&#x27;</span>).<span class="hljs-property">pageSize</span>;<span class="hljs-comment">//通过表的#id 可以得到每页多少条</span><br>                        <span class="hljs-keyword">var</span> pageNumber = $(<span class="hljs-string">&#x27;#tableOne&#x27;</span>).<span class="hljs-title function_">bootstrapTable</span>(<span class="hljs-string">&#x27;getOptions&#x27;</span>).<span class="hljs-property">pageNumber</span>;<span class="hljs-comment">//通过表的#id 可以得到当前第几页</span><br>                        <span class="hljs-keyword">return</span> pageSize * (pageNumber - <span class="hljs-number">1</span>) + index + <span class="hljs-number">1</span>;<span class="hljs-comment">//返回每条的序号： 每页条数 * （当前页 - 1 ）+ 序号</span><br><span class="hljs-comment">//return index+1;</span><br>             &#125;&#125;,<br>             <span class="hljs-comment">//&#123;radio: true,valign:&quot;middle&quot;,align:&quot;center&quot;,formatter: function (value, row, index)&#123;</span><br>         <span class="hljs-comment">//&#125;&#125;,//单选框</span><br>             <span class="hljs-comment">//&#123;field: &#x27;stat&#x27;,checkbox: true&#125;, //复选框</span><br>             &#123;<span class="hljs-attr">field</span>: <span class="hljs-string">&#x27;id&#x27;</span>,<span class="hljs-attr">title</span>: <span class="hljs-string">&quot;考试题库id&quot;</span>,<span class="hljs-attr">valign</span>:<span class="hljs-string">&quot;middle&quot;</span>,<span class="hljs-attr">align</span>:<span class="hljs-string">&quot;center&quot;</span>,<span class="hljs-attr">visible</span>:<span class="hljs-literal">false</span>&#125;,<br>             &#123;<span class="hljs-attr">field</span>: <span class="hljs-string">&#x27;qubankId&#x27;</span>,<span class="hljs-attr">title</span>: <span class="hljs-string">&quot;题库id&quot;</span>,<span class="hljs-attr">valign</span>:<span class="hljs-string">&quot;middle&quot;</span>,<span class="hljs-attr">align</span>:<span class="hljs-string">&quot;center&quot;</span>,<span class="hljs-attr">visible</span>:<span class="hljs-literal">false</span>&#125;,<br>             &#123;<span class="hljs-attr">field</span>: <span class="hljs-string">&#x27;qubankTitle&#x27;</span>,<span class="hljs-attr">title</span>: <span class="hljs-string">&quot;题库&quot;</span>,<span class="hljs-attr">valign</span>:<span class="hljs-string">&quot;middle&quot;</span>,<span class="hljs-attr">align</span>:<span class="hljs-string">&quot;center&quot;</span>,<span class="hljs-attr">isTip</span>:<span class="hljs-literal">false</span>,<span class="hljs-attr">formatter</span>:<span class="hljs-keyword">function</span>(<span class="hljs-params">value,row,index</span>)&#123;<br>             <span class="hljs-keyword">return</span> <span class="hljs-string">&#x27;&lt;div style=&quot;cursor:pointer;&quot; onclick=&quot;choiceQU(&#x27;</span>+index+<span class="hljs-string">&#x27;,&#x27;</span>+row.<span class="hljs-property">qubankId</span>+<span class="hljs-string">&#x27;,&#x27;</span>+row.<span class="hljs-property">id</span>+<span class="hljs-string">&#x27;)&quot;&gt;&#x27;</span>+value+<span class="hljs-string">&#x27;&lt;/div&gt;&#x27;</span>;<br>             &#125;&#125;,<br>             &#123;<span class="hljs-attr">field</span>: <span class="hljs-string">&#x27;radioCount&#x27;</span>,<span class="hljs-attr">title</span>: <span class="hljs-string">&quot;单选题数量&quot;</span>,<span class="hljs-attr">valign</span>:<span class="hljs-string">&quot;middle&quot;</span>,<span class="hljs-attr">align</span>:<span class="hljs-string">&quot;center&quot;</span>,<span class="hljs-attr">isTip</span>:<span class="hljs-literal">false</span>,<span class="hljs-attr">formatter</span>:<span class="hljs-keyword">function</span>(<span class="hljs-params">value</span>)&#123;<br>             <span class="hljs-keyword">return</span> <span class="hljs-string">&#x27;&lt;div contentEditable=&quot;true&quot;&gt;&#x27;</span> + value + <span class="hljs-string">&#x27;&lt;/div&gt;&#x27;</span>&#125;&#125;,<br>             &#123;<span class="hljs-attr">field</span>: <span class="hljs-string">&#x27;radioScore&#x27;</span>,<span class="hljs-attr">title</span>: <span class="hljs-string">&quot;单选题分数&quot;</span>,<span class="hljs-attr">valign</span>:<span class="hljs-string">&quot;middle&quot;</span>,<span class="hljs-attr">align</span>:<span class="hljs-string">&quot;center&quot;</span>,<span class="hljs-attr">isTip</span>:<span class="hljs-literal">false</span>,<span class="hljs-attr">formatter</span>:<span class="hljs-keyword">function</span>(<span class="hljs-params">value</span>)&#123;<br>         <span class="hljs-keyword">return</span> <span class="hljs-string">&#x27;&lt;div contentEditable=&quot;true&quot;&gt;&#x27;</span> + value + <span class="hljs-string">&#x27;&lt;/div&gt;&#x27;</span>&#125;&#125;,<br>             &#123;<span class="hljs-attr">field</span>: <span class="hljs-string">&#x27;multiCount&#x27;</span>,<span class="hljs-attr">title</span>: <span class="hljs-string">&quot;多选题数量&quot;</span>,<span class="hljs-attr">valign</span>:<span class="hljs-string">&quot;middle&quot;</span>,<span class="hljs-attr">align</span>:<span class="hljs-string">&quot;center&quot;</span>,<span class="hljs-attr">isTip</span>:<span class="hljs-literal">false</span>,<span class="hljs-attr">formatter</span>:<span class="hljs-keyword">function</span>(<span class="hljs-params">value</span>)&#123;<br>     <span class="hljs-keyword">return</span> <span class="hljs-string">&#x27;&lt;div contentEditable=&quot;true&quot;&gt;&#x27;</span> + value + <span class="hljs-string">&#x27;&lt;/div&gt;&#x27;</span>&#125;&#125;,<br>             &#123;<span class="hljs-attr">field</span>: <span class="hljs-string">&#x27;multiScore&#x27;</span>,<span class="hljs-attr">title</span>: <span class="hljs-string">&quot;多选题分数&quot;</span>,<span class="hljs-attr">valign</span>:<span class="hljs-string">&quot;middle&quot;</span>,<span class="hljs-attr">align</span>:<span class="hljs-string">&quot;center&quot;</span>,<span class="hljs-attr">isTip</span>:<span class="hljs-literal">false</span>,<span class="hljs-attr">formatter</span>:<span class="hljs-keyword">function</span>(<span class="hljs-params">value</span>)&#123;<br> <span class="hljs-keyword">return</span> <span class="hljs-string">&#x27;&lt;div contentEditable=&quot;true&quot;&gt;&#x27;</span> + value + <span class="hljs-string">&#x27;&lt;/div&gt;&#x27;</span>&#125;&#125;,<br>             &#123;<span class="hljs-attr">field</span>: <span class="hljs-string">&#x27;judgeCount&#x27;</span>,<span class="hljs-attr">title</span>: <span class="hljs-string">&quot;判断题数量&quot;</span>,<span class="hljs-attr">valign</span>:<span class="hljs-string">&quot;middle&quot;</span>,<span class="hljs-attr">align</span>:<span class="hljs-string">&quot;center&quot;</span>,<span class="hljs-attr">isTip</span>:<span class="hljs-literal">false</span>,<span class="hljs-attr">formatter</span>:<span class="hljs-keyword">function</span>(<span class="hljs-params">value</span>)&#123;<br><span class="hljs-keyword">return</span> <span class="hljs-string">&#x27;&lt;div contentEditable=&quot;true&quot;&gt;&#x27;</span> + value + <span class="hljs-string">&#x27;&lt;/div&gt;&#x27;</span>&#125;&#125;,<br>             &#123;<span class="hljs-attr">field</span>: <span class="hljs-string">&#x27;judgeScore&#x27;</span>,<span class="hljs-attr">title</span>: <span class="hljs-string">&quot;判断题分数&quot;</span>,<span class="hljs-attr">valign</span>:<span class="hljs-string">&quot;middle&quot;</span>,<span class="hljs-attr">align</span>:<span class="hljs-string">&quot;center&quot;</span>,<span class="hljs-attr">isTip</span>:<span class="hljs-literal">false</span>,<span class="hljs-attr">formatter</span>:<span class="hljs-keyword">function</span>(<span class="hljs-params">value</span>)&#123;<br><span class="hljs-keyword">return</span> <span class="hljs-string">&#x27;&lt;div contentEditable=&quot;true&quot;&gt;&#x27;</span> + value + <span class="hljs-string">&#x27;&lt;/div&gt;&#x27;</span>&#125;&#125;,<br>             &#123;<span class="hljs-attr">field</span>: <span class="hljs-string">&#x27;saqCount&#x27;</span>,<span class="hljs-attr">title</span>: <span class="hljs-string">&quot;简答题数量&quot;</span>,<span class="hljs-attr">valign</span>:<span class="hljs-string">&quot;middle&quot;</span>,<span class="hljs-attr">align</span>:<span class="hljs-string">&quot;center&quot;</span>,<span class="hljs-attr">isTip</span>:<span class="hljs-literal">false</span>,<span class="hljs-attr">formatter</span>:<span class="hljs-keyword">function</span>(<span class="hljs-params">value</span>)&#123;<br><span class="hljs-keyword">return</span> <span class="hljs-string">&#x27;&lt;div contentEditable=&quot;true&quot;&gt;&#x27;</span> + value + <span class="hljs-string">&#x27;&lt;/div&gt;&#x27;</span>&#125;&#125;,<br>             &#123;<span class="hljs-attr">field</span>: <span class="hljs-string">&#x27;saqScore&#x27;</span>,<span class="hljs-attr">title</span>: <span class="hljs-string">&quot;简答题分数&quot;</span>,<span class="hljs-attr">valign</span>:<span class="hljs-string">&quot;middle&quot;</span>,<span class="hljs-attr">align</span>:<span class="hljs-string">&quot;center&quot;</span>,<span class="hljs-attr">isTip</span>:<span class="hljs-literal">false</span>,<span class="hljs-attr">formatter</span>:<span class="hljs-keyword">function</span>(<span class="hljs-params">value</span>)&#123;<br><span class="hljs-keyword">return</span> <span class="hljs-string">&#x27;&lt;div contentEditable=&quot;true&quot;&gt;&#x27;</span> + value + <span class="hljs-string">&#x27;&lt;/div&gt;&#x27;</span>&#125;&#125;,<br>             &#123;<span class="hljs-attr">field</span>: <span class="hljs-string">&#x27;index&#x27;</span>,<span class="hljs-attr">title</span>: <span class="hljs-string">&quot;操作&quot;</span>,<span class="hljs-attr">valign</span>:<span class="hljs-string">&quot;middle&quot;</span>,<span class="hljs-attr">align</span>:<span class="hljs-string">&quot;center&quot;</span>,<span class="hljs-attr">isTip</span>:<span class="hljs-literal">false</span>,<span class="hljs-attr">formatter</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">value, row, index</span>)&#123;<br>                     <span class="hljs-keyword">var</span> url = <span class="hljs-string">&#x27;&lt;a href=&quot;javascript:void(0)&quot; style=&quot;color:blue&quot; onclick=&quot;removeRow(&#x27;</span>+value+<span class="hljs-string">&#x27;,&#x27;</span>+row.<span class="hljs-property">id</span>+<span class="hljs-string">&#x27;)&quot;&gt;&lt;img src=&quot;skin/meteringTS/custom/images/deletes.png&quot; /&gt;&lt;/a&gt;&#x27;</span>;<br>                         <span class="hljs-keyword">return</span> url;  <br>             &#125;&#125;<br>    ],<br>    <span class="hljs-attr">onClickCell</span>: <span class="hljs-keyword">function</span>(<span class="hljs-params">field, value, row, $element</span>)&#123;<br>    <span class="hljs-keyword">if</span>(field==<span class="hljs-string">&#x27;qubankTitle&#x27;</span> || field==<span class="hljs-string">&#x27;index&#x27;</span>)<br>    <span class="hljs-keyword">return</span>;<br>    <span class="hljs-keyword">if</span>(!row.<span class="hljs-property">qubankId</span> || row.<span class="hljs-property">qubankId</span> == <span class="hljs-literal">null</span> || row.<span class="hljs-property">qubankId</span> == <span class="hljs-string">&#x27;&#x27;</span>)&#123;<br>    <span class="hljs-title function_">dialog</span>(<span class="hljs-string">&quot;请先选择题库！&quot;</span>);<br>    <span class="hljs-keyword">return</span>;<br>    &#125;<br>    $element.<span class="hljs-title function_">children</span>().<span class="hljs-title function_">blur</span>(<span class="hljs-keyword">function</span>(<span class="hljs-params"></span>)&#123;<br>    <span class="hljs-keyword">var</span> index = $element.<span class="hljs-title function_">parent</span>().<span class="hljs-title function_">data</span>(<span class="hljs-string">&#x27;index&#x27;</span>);<br>    <span class="hljs-keyword">var</span> tdValue = $element.<span class="hljs-title function_">children</span>().<span class="hljs-title function_">html</span>();<br>    <span class="hljs-keyword">var</span> reg = <span class="hljs-keyword">new</span> <span class="hljs-title class_">RegExp</span>(<span class="hljs-regexp">/^\+?[1-9][0-9]*$/</span>);<br>    <span class="hljs-keyword">if</span> (!reg.<span class="hljs-title function_">test</span>(tdValue)) &#123;<br>    tdValue = value;<br>    &#125;<br><span class="hljs-comment">//校验题库题目数量是否满足所填试题数量</span><br><span class="hljs-keyword">if</span>(field==<span class="hljs-string">&#x27;radioCount&#x27;</span> || field==<span class="hljs-string">&#x27;multiCount&#x27;</span> || field==<span class="hljs-string">&#x27;judgeCount&#x27;</span> || field==<span class="hljs-string">&#x27;saqCount&#x27;</span>)&#123;<br>$.<span class="hljs-title function_">ajax</span>(&#123;<br><span class="hljs-attr">type</span>: <span class="hljs-string">&quot;POST&quot;</span>,<span class="hljs-comment">//方法类型</span><br>        <span class="hljs-attr">dataType</span>: <span class="hljs-string">&#x27;json&#x27;</span>,<span class="hljs-comment">//预期服务器返回的数据类型</span><br>        <span class="hljs-attr">url</span>: <span class="hljs-string">&quot;&lt;%=basePath%&gt;examQuesWeb/list.so&quot;</span>,<br>        <span class="hljs-attr">data</span>: &#123;<span class="hljs-attr">qubankId</span>: row.<span class="hljs-property">qubankId</span>&#125;,<br>        <span class="hljs-attr">async</span>: <span class="hljs-literal">true</span>,<br>        <span class="hljs-attr">success</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">result</span>) &#123;<br>        <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(result);<br>            <span class="hljs-keyword">if</span>(result.<span class="hljs-property">total</span> &lt; tdValue)&#123;<span class="hljs-comment">//保存成功跳转到列表页面</span><br>    <span class="hljs-title function_">dialog</span>(<span class="hljs-string">&quot;题库题目数量不足！&quot;</span>);<br>    $(<span class="hljs-string">&quot;#tableOne&quot;</span>).<span class="hljs-title function_">bootstrapTable</span>(<span class="hljs-string">&#x27;updateCell&#x27;</span>, &#123;<span class="hljs-attr">index</span>: index, <span class="hljs-attr">field</span>: field,<span class="hljs-attr">value</span>: value&#125;);<br>    &#125;<br>            &#125;,<br>            error : <span class="hljs-keyword">function</span>(<span class="hljs-params"></span>) &#123;<br>            <span class="hljs-title function_">dialog</span>(<span class="hljs-string">&quot;系统异常，请联系管理员！&quot;</span>);<br>            &#125;<br>    &#125;);<br>&#125;<br>    $(<span class="hljs-string">&quot;#tableOne&quot;</span>).<span class="hljs-title function_">bootstrapTable</span>(<span class="hljs-string">&#x27;updateCell&#x27;</span>, &#123;<span class="hljs-attr">index</span>: index, <span class="hljs-attr">field</span>: field,<span class="hljs-attr">value</span>: tdValue&#125;);<br>    <span class="hljs-title function_">calcTotal</span>();<br>    &#125;);<br>   &#125;<br>    &#125;);<br>&#125;<br><br><span class="hljs-keyword">function</span> <span class="hljs-title function_">insertRow</span>(<span class="hljs-params"></span>)&#123;<br><span class="hljs-comment">//获取对象</span><br><span class="hljs-keyword">var</span> obj=$(<span class="hljs-string">&#x27;#tableOne&#x27;</span>);<br><span class="hljs-keyword">var</span> count = obj.<span class="hljs-title function_">bootstrapTable</span>(<span class="hljs-string">&#x27;getData&#x27;</span>).<span class="hljs-property">length</span>;<br><span class="hljs-comment">//插入数据到末尾</span><br>obj.<span class="hljs-title function_">bootstrapTable</span>(<span class="hljs-string">&#x27;insertRow&#x27;</span>, &#123;<br><span class="hljs-attr">index</span>: count,<br><span class="hljs-attr">row</span>: &#123;<br><span class="hljs-attr">index</span>: count,<br><span class="hljs-attr">id</span>: <span class="hljs-literal">null</span>,<br><span class="hljs-attr">qubankId</span>: <span class="hljs-literal">null</span>,<br><span class="hljs-attr">qubankTitle</span>: <span class="hljs-string">&#x27;请选择&#x27;</span>,<br>          <span class="hljs-attr">radioCount</span>: <span class="hljs-number">0</span>,<br>          <span class="hljs-attr">radioScore</span>: <span class="hljs-number">0</span>,<br>          <span class="hljs-attr">multiCount</span>: <span class="hljs-number">0</span>,<br>          <span class="hljs-attr">multiScore</span>: <span class="hljs-number">0</span>,<br>          <span class="hljs-attr">judgeCount</span>: <span class="hljs-number">0</span>,<br>          <span class="hljs-attr">judgeScore</span>: <span class="hljs-number">0</span>,<br>          <span class="hljs-attr">saqCount</span>: <span class="hljs-number">0</span>,<br>          <span class="hljs-attr">saqScore</span>: <span class="hljs-number">0</span><br>&#125;<br>  &#125;);<br>$(<span class="hljs-string">&quot;.pagination-info&quot;</span>).<span class="hljs-title function_">html</span>(<span class="hljs-string">&quot;总记录&quot;</span>+(count+<span class="hljs-number">1</span>)+<span class="hljs-string">&quot; 条&quot;</span>);<br>&#125;<br><br><span class="hljs-comment">//删除一行</span><br><span class="hljs-keyword">var</span> rowList = [];<br><span class="hljs-keyword">function</span> <span class="hljs-title function_">removeRow</span>(<span class="hljs-params">index, id</span>)&#123;<br><span class="hljs-keyword">var</span> count = $(<span class="hljs-string">&quot;#tableOne&quot;</span>).<span class="hljs-title function_">bootstrapTable</span>(<span class="hljs-string">&#x27;getData&#x27;</span>).<span class="hljs-property">length</span>;<br><span class="hljs-keyword">if</span>(id)&#123;<br>rowList.<span class="hljs-title function_">push</span>(id);<br><span class="hljs-comment">//删除一行数据</span><br>$(<span class="hljs-string">&quot;#tableOne&quot;</span>).<span class="hljs-title function_">bootstrapTable</span>(<span class="hljs-string">&#x27;remove&#x27;</span>, &#123;<span class="hljs-attr">field</span>: <span class="hljs-string">&#x27;id&#x27;</span>,<span class="hljs-attr">values</span>: [<span class="hljs-built_in">parseInt</span>(id)] &#125;);<br>&#125;<span class="hljs-keyword">else</span>&#123;<br><span class="hljs-comment">//删除一行数据</span><br>$(<span class="hljs-string">&quot;#tableOne&quot;</span>).<span class="hljs-title function_">bootstrapTable</span>(<span class="hljs-string">&#x27;remove&#x27;</span>, &#123;<span class="hljs-attr">field</span>: <span class="hljs-string">&#x27;index&#x27;</span>,<span class="hljs-attr">values</span>: [<span class="hljs-built_in">parseInt</span>(index)] &#125;);<br>&#125;<br>$(<span class="hljs-string">&quot;.pagination-info&quot;</span>).<span class="hljs-title function_">html</span>(<span class="hljs-string">&quot;总记录&quot;</span>+(count-<span class="hljs-number">1</span>&lt;<span class="hljs-number">0</span>?<span class="hljs-number">0</span>:count-<span class="hljs-number">1</span>)+<span class="hljs-string">&quot; 条&quot;</span>);<br><span class="hljs-title function_">calcTotal</span>();<span class="hljs-comment">//重新计算总分</span><br>&#125;<br>&lt;/script&gt;<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>Bootstrap</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Bootstrap</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Gradle 简介</title>
    <link href="/2019/10/10/gradle/"/>
    <url>/2019/10/10/gradle/</url>
    
    <content type="html"><![CDATA[<h3 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h3><p>gradle 是基于 <strong>JVM</strong> 的项目构建工具，使用基于 <strong>groovy</strong> 的 <strong>DSL</strong>（领域特定语言）来定制逻辑，替代 xml ，支持 java 或 groovy 语言编写定制逻辑<br>gradle 从配置文件开始，默认名称为 <strong>build.gradle</strong></p><h4 id="helloworld"><a href="#helloworld" class="headerlink" title="helloworld"></a>helloworld</h4><p>在build.gradle 文件中写入：创建一个 task （任务），执行一个 action（动作）doLast</p><figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs gradle"><span class="hljs-keyword">task</span> helloworld&#123;<br>    <span class="hljs-keyword">doLast</span>&#123;<br>        <span class="hljs-keyword">print</span> <span class="hljs-string">&#x27;hello world&#x27;</span><span class="hljs-comment">//groovy 支持省略分号和小括号</span><br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p>可简写为：</p><figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs gradle"><span class="hljs-keyword">task</span> helloworld &lt;&lt; &#123;  <span class="hljs-comment">// doLast 以 &lt;&lt;  符号代替</span><br>    <span class="hljs-keyword">println</span> <span class="hljs-string">&#x27;hello world&#x27;</span><br>&#125;<br></code></pre></td></tr></table></figure><p>命令行输入：<strong>gradle helloworld 【-q】</strong> 运行，将打印出 helloworld，加上 -q 可以省略命令信息，只显示结果</p><h4 id="命令行"><a href="#命令行" class="headerlink" title="命令行"></a>命令行</h4><p>命令行参数：</p><ul><li>-i 将日志级别提高到 INFO 级别，可以看到更详细的信息</li><li>-s 输出堆栈信息，可查看错误的地方</li><li>-b 后跟脚本名称，构建指定脚本，默认构建 build.gradle 脚本</li><li>-x 执行任务时，排除制定的任务</li><li>-q 省略命令信息，只显示结果</li></ul><figure class="highlight arcade"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs arcade">gradle tasks --<span class="hljs-built_in">all</span> <span class="hljs-comment">// 查看当前存在的任务</span><br>gradle properties<br></code></pre></td></tr></table></figure><p>一个任务只会执行一次，无论是单独执行，还是作为其他任务的依赖执行<br/><br>可以使用简写的形式执行任务，使用<strong>任务名每个单词的首字母</strong>，需要保证简写的唯一性：</p><figure class="highlight gams"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs gams">gradle groupTherapy  &lt;=&gt; gradle <span class="hljs-keyword">gT</span><br>gradle groupTherapy -x yayGradle0  <span class="hljs-comment">//  -x ：执行任务时，排除制定的任务</span><br>上述命令可简写为 gradle <span class="hljs-keyword">gT</span> -x yG0<br></code></pre></td></tr></table></figure><p>守护进程：</p><figure class="highlight jboss-cli"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs jboss-cli">gradle taskName <span class="hljs-params">--daemon</span>  <span class="hljs-string">//</span> 使用守护进程构建脚本，更快<br>gradle taskName <span class="hljs-params">--no-daemon</span> <span class="hljs-string">//</span> 不使用守护进程构建脚本<br>gradle <span class="hljs-params">--stop</span> <span class="hljs-string">//</span> 结束守护进程 <br></code></pre></td></tr></table></figure><p>包装器：<br>&#x2F;&#x2F;创建包装器，指定使用 gradle 的版本，<br>&#x2F;&#x2F; 包装器可以在没有安装 gradle 的环境中运行，从远端下载指定 gradle 版本，完全还原应用原有环境<br>&#x2F;&#x2F; 在新环境下，运行 gradlew.bat&#x2F;gradlew jettyStart 等 web 容器启动命令，即可直接运行应用</p><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs pgsql">task <span class="hljs-keyword">wrapper</span>(<span class="hljs-keyword">type</span>: <span class="hljs-keyword">Wrapper</span>) &#123;<br>    gradleVersion = <span class="hljs-string">&#x27;4.10.2&#x27;</span><br>&#125;<br></code></pre></td></tr></table></figure><p>命令行执行 gradle wrapper 将会在项目根目录下，生成 gradlew 和 gradlew.bat 文件，分别为 linux 和 windows 下的执行命令<br>在新环境下，可使用 gradlew &#x2F; gradlew.bat 还原应用环境 </p><h3 id="Groovy"><a href="#Groovy" class="headerlink" title="Groovy"></a>Groovy</h3><p>语法类似java</p><ol><li>无需分号结尾</li><li>类、方法、属性默认都是 public</li><li>方法中最好一个表达式的值为返回值，可以省略 return</li><li>&#x3D;&#x3D; 等价于 equals ，没有空指针异常</li><li>使用 def 定义变量</li><li>assert 断言可在任意处使用</li><li>string类型有三种，‘’–字符串，“”–其中可通过 ${} 引用变量 ，‘’‘ ’‘’–字符串可换行</li><li>集合都是用 [ ] 表示，可通过 。 的形式引用元素，对应arrayList 和 linkedHashMap</li><li>闭包，代码块，用 { } 来表示</li></ol><p>gradle构建项目中的，build.gradle文件：</p><figure class="highlight crmsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs crmsh"><span class="hljs-keyword">group</span> <span class="hljs-title">&#x27;com</span>.fly&#x27;<br><span class="hljs-keyword">version</span> &#x27;<span class="hljs-number">1.0</span>-SNAPSHOT&#x27;<br></code></pre></td></tr></table></figure><p>可在项目根目录下新建 gradle.properties 文件，将 group 和 version 等配置到其中<br>名称一定为 gradle.properties</p><figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><code class="hljs gradle">apply plugin: <span class="hljs-string">&#x27;java&#x27;</span><span class="hljs-comment">//引入 java 插件</span><br>apply plugin: <span class="hljs-string">&#x27;war&#x27;</span><span class="hljs-comment">// 引入 war 包依赖</span><br><br><span class="hljs-keyword">sourceCompatibility</span> = <span class="hljs-number">1.7</span><br><br><span class="hljs-keyword">repositories</span> &#123;<br>    mavenLocal()<br>    maven&#123;<br>        url <span class="hljs-string">&#x27;/*私服地址*/&#x27;</span><br>    &#125;<br>    mavenCentral()<span class="hljs-comment">//指定中央仓库</span><br>&#125;<br><br><span class="hljs-keyword">dependencies</span> &#123;<br>    <span class="hljs-comment">//添加测试编译期依赖，RunTime 是运行时依赖</span><br>    <span class="hljs-keyword">compile</span> <span class="hljs-string">&#x27;log4j:log4j:1.2.17&#x27;</span><br>    testCompile <span class="hljs-keyword">group</span>: <span class="hljs-string">&#x27;junit&#x27;</span>, name: <span class="hljs-string">&#x27;junit&#x27;</span>, version: <span class="hljs-string">&#x27;4.12&#x27;</span><br>&#125;<br><br><span class="hljs-comment">//闭包</span><br><span class="hljs-keyword">def</span> createDir = &#123;<br>    path -&gt;<br>        <span class="hljs-keyword">File</span> dir = <span class="hljs-keyword">new</span> <span class="hljs-keyword">File</span>(path)<br>        <span class="hljs-keyword">if</span> (!dir.exists())&#123;<br>           dir.mkdirs()<br>        &#125;<br>&#125;<br><span class="hljs-comment">//自定义任务，创建 java-src 相关目录</span><br><span class="hljs-keyword">task</span> makeJavaDir &lt;&lt; &#123;<span class="hljs-comment">// &lt;&lt; 表示 doLast 方法</span><br>    <span class="hljs-keyword">def</span> paths = [<span class="hljs-string">&#x27;src/main/java&#x27;</span>,<span class="hljs-string">&#x27;src/main/resources&#x27;</span>,<span class="hljs-string">&#x27;test/main/java&#x27;</span>,<span class="hljs-string">&#x27;test/main/resources&#x27;</span>]<br>    paths.<span class="hljs-keyword">each</span> createDir <span class="hljs-comment">//调用闭包，作为参数，此处省略了（），paths中的值将会传给闭包中的参数</span><br>&#125;<br><span class="hljs-comment">//创建 java-web 相关目录</span><br><span class="hljs-keyword">task</span> makeJavaWebDir &#123;<br>    dependsOn makeJavaDir <span class="hljs-comment">//不能放在doLast等方法中</span><br>    <span class="hljs-keyword">def</span> paths = [<span class="hljs-string">&#x27;src/main/webapp&#x27;</span>,<span class="hljs-string">&#x27;src/main/webapp/WEB-INF&#x27;</span>,<span class="hljs-string">&#x27;src/main/webapp/static&#x27;</span>]<br>   <span class="hljs-keyword">doLast</span> &#123;paths.<span class="hljs-keyword">each</span> createDir&#125;<br>&#125;<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>Gradle</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Gradle</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Linux 命令</title>
    <link href="/2019/10/10/linux%20command/"/>
    <url>/2019/10/10/linux%20command/</url>
    
    <content type="html"><![CDATA[<h3 id="linux-command"><a href="#linux-command" class="headerlink" title="linux command"></a>linux command</h3><ul><li><p>查看文件内容，并清屏显示</p><pre><code class="hljs">more -dc filename</code></pre></li><li><p>more 命令也可以查看 nginx 的进程 id</p><pre><code class="hljs">more logs/nginx.pid</code></pre><p>同 cat 命令</p><pre><code class="hljs">cat logs/nginx.pid</code></pre></li><li><p>date命令</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">date</span> <span class="hljs-comment">#查看当前时间</span><br><span class="hljs-built_in">date</span> -r filename <span class="hljs-comment">#查看文件最后的修改时间</span><br><span class="hljs-built_in">date</span> -d yesterday <span class="hljs-comment">#字符串显示昨天的日期</span><br><span class="hljs-built_in">date</span> +%Y-%m-%d <span class="hljs-comment">#格式化显示日期</span><br></code></pre></td></tr></table></figure></li><li><p>定时任务 crontab</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs bash">crontab -l <span class="hljs-comment">#linux 系统的定时任务，-l 列出定时任务的列表</span><br>crontab -e <span class="hljs-comment">#-e 编辑定时任务列表</span><br>例子：<br>* * * * * <span class="hljs-built_in">command</span> <span class="hljs-comment">#每分钟执行一次，command 可以是命令也可以是脚本的路径</span><br>5 0 * * * /usr/local/nginx/logback.sh <span class="hljs-comment">#每天凌晨0点5分执行</span><br></code></pre></td></tr></table></figure></li><li><p>系统服务，添加至开机启动 chkconfig</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs bash">vim /etc/init.d/nginxd <span class="hljs-comment">#编写可执行的脚本文件，放置于 /etc/init.d/ 下</span><br>insert <span class="hljs-string">&quot;#chkconfig 2345 88 11&quot;</span> <span class="hljs-comment">#在 nginxd 文件头部添加开机启动配置</span><br>chkconfig nginxd <span class="hljs-comment">#添加至开机启动</span><br><br><span class="hljs-comment">#chkconfig 2345 88 11</span><br>2345 表示开机启动的等级，即在什么情况下自动启动<br>88  代表开启服务的顺序，越大越晚启动<br>11  代表关闭服务的顺序，越小越晚关闭，<br>    有些任务可能存在依赖关系，自写的服务，应晚启动、晚关闭<br></code></pre></td></tr></table></figure></li><li><p>journalctl 检查系统日志 systemd</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">journalctl -xe <span class="hljs-comment">#从日志最下方开始，附带说明文本，可用于查看 keepalived 的运行日志</span><br></code></pre></td></tr></table></figure></li></ul>]]></content>
    
    
    <categories>
      
      <category>Linux</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Linux</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Nginx 简介</title>
    <link href="/2019/10/10/nginx/"/>
    <url>/2019/10/10/nginx/</url>
    
    <content type="html"><![CDATA[<h4 id="安装"><a href="#安装" class="headerlink" title="安装"></a><span id="start">安装</span></h4><p>1、 在 nginx <a href="http://nginx.org/" title="http:&#x2F;&#x2F;nginx.org">官网</a>下载指定版本的 tar.gz文件，通过 ftp 工具上传至服务器，解压缩。<br /><br>也可以通过 <code>wget</code> 下载工具直接从网络下载。</p><pre><code class="hljs">wget nginx.org/download/nginx-1.17.4.tar.gz</code></pre><p>2、 安装依赖包：<code>pcre、pcre-devel、zlib、zlib-devel、openssl、openssl-devel</code><br /><br>pcre 提供正则表达式支持，zlib 提供压缩格式支持，openssl 提供 加密、ssl 和证书支持</p><blockquote><p>查看是否安装了相关程序包</p></blockquote><pre><code class="hljs">yum list pcre pcre-devel zlib zlib-devel openssl openssl-devel</code></pre><blockquote><p>安装程序包</p></blockquote><pre><code class="hljs">yum install -y pcre #安装 pcre 的同时，会连带 pcre-devel 一同安装</code></pre><p>3、 编译和安装</p><blockquote><p>在解压后的目录下有一个二进制执行文件 <code>configure</code> 是 nginx 提供的编译执行程序<br />用来生成编译所需的 <code>makefile</code> 文件</p></blockquote><pre><code class="hljs">    cd nginx-1.17.4 #切换到解压文件夹    ./configure --help #使用 help 参数查看 configure 都支持哪些参数选项    ./configure #如果不需其他模块支持，直接直接该二进制程序即可，如果需要，后跟 --with-xxx</code></pre><blockquote><p>执行完 <code>configure</code> 程序后，对项目进行编译和安装，默认的安装路径为 <code>usr/local/nginx</code><br />安装完成后在该目录下的 <code>sbin</code> 文件夹下会生成 <code>nginx</code> 可执行程序</p></blockquote><pre><code class="hljs">make &amp;&amp; make install #编译并安装，&amp;&amp; 代表前一条命令执行成功后才会执行右边的命令</code></pre><h4 id="启动"><a href="#启动" class="headerlink" title="启动"></a>启动</h4><blockquote><p>在 nginx 根目录下的 <strong>sbin</strong> 文件夹中，有一个名为 <code>nginx</code> 的二进制文件，通过操作它操作 <font color="red">nginx</font>。</p></blockquote><ul><li><p>操作二进制文件</p><pre><code class="hljs">nginx -h/?  --查看帮助nginx -t    --测试 nginx.conf 文件是否有语法错误nginx -s stop/quit/reopen/reload    --停止/优雅的停止/重新打开日志文件/重新加载配置文件nginx -g daemon off; --ngnix 运行在前台，禁止在后台运行</code></pre></li></ul><blockquote><p>将<code>nginx</code>添加到环境变量 <code>$PATH</code> 中</p></blockquote><ul><li><p>查看当前环境变量下都有哪些路径</p><pre><code class="hljs">  echo $PATH</code></pre></li><li><p><code>/usr/local/sbin</code>目录在环境变量中，则创建软连接到 <code>/usr/local/sbin</code>目录下，即可将 nginx 命令加入环境变量<code>$PATH</code>中</p><pre><code class="hljs">  ln -s /usr/local/nginx/sbin/nginx /usr/local/sbin/nginx</code></pre></li><li><p>也可以将 <code>/usr/local/nginx/sbin</code> 路径添加入 <code>$PATH</code> 环境变量中</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash">vim /etc/profile <span class="hljs-comment">#编辑 profile 文件，在末尾添加如下命令</span><br><span class="hljs-built_in">export</span> PATH=<span class="hljs-variable">$PATH</span>:/usr/local/nginx/sbin <span class="hljs-comment">#追加路径至 $PATH 环境变量中</span><br><span class="hljs-built_in">source</span> /etc/profile <span class="hljs-comment">#使修改生效，否则需要重启生效</span><br></code></pre></td></tr></table></figure></li></ul><blockquote><p>将<code>nginx</code>添加到系统服务<code>service</code>中</p></blockquote><ul><li><p>系统服务以<code>service xxx start/status/stop/restart</code>等形式执行，实际上是执行的<code>/etc/init.d/</code>目录下的名为<code>xxx</code>脚本文件，并将参数传入脚本中执行。故需编写<code>nginxd</code>脚本文件，置于该目录下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-meta">#!/bin/bash</span><br><span class="hljs-comment">#chkconfig: 35 85 15</span><br><br>nginxd=/usr/local/nginx/sbin/nginx<br><br><span class="hljs-keyword">case</span> <span class="hljs-variable">$1</span> <span class="hljs-keyword">in</span><br><br>    start)<br>    <span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;starting nginx...&quot;</span><br>    <span class="hljs-variable">$nginxd</span> &amp;&amp; <span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;start success&quot;</span><br>    ;;<br>    stop)<br>    <span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;stopping nginx...&quot;</span><br>    <span class="hljs-variable">$nginxd</span> -s quit &amp;&amp; <span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;stop success&quot;</span><br>    ;;<br>    status)<br>    <span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;querying nginx...&quot;</span><br>    <span class="hljs-keyword">if</span> [ $(ps -ef|grep nginx|grep -v grep|grep -v $$|<span class="hljs-built_in">wc</span> -l) -eq 0 ];<span class="hljs-keyword">then</span><br>    <span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;nginx is not active.&quot;</span><br>    <span class="hljs-keyword">else</span><br>    <span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;nginx is active.&quot;</span><br>    <span class="hljs-keyword">fi</span><br>    ;;<br>    restart)<br>    <span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;restarting nginx...&quot;</span><br>    <span class="hljs-keyword">if</span> [ $(ps -ef|grep nginx|grep -v grep|grep -v $$|<span class="hljs-built_in">wc</span> -l) -eq 0 ];<span class="hljs-keyword">then</span><br>    <span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;nginx is not active. start it now.&quot;</span><br>    <span class="hljs-variable">$nginxd</span><br>    <span class="hljs-keyword">else</span><br>    <span class="hljs-variable">$nginxd</span> -s quit &amp;&amp; <span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;stop success&quot;</span> &amp;&amp; <span class="hljs-variable">$nginxd</span> &amp;&amp; <span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;restart success&quot;</span><br>    <span class="hljs-keyword">fi</span><br>    ;;<br>    reload)<br>    <span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;reloading nginx...&quot;</span><br>    <span class="hljs-keyword">if</span> [ $(ps -ef|grep nginx|grep -v grep|grep -v $$|<span class="hljs-built_in">wc</span> -l) -eq 0 ];<span class="hljs-keyword">then</span><br>    <span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;nginx is not active. start it now.&quot;</span><br>    <span class="hljs-variable">$nginxd</span><br>    <span class="hljs-keyword">else</span><br>    <span class="hljs-variable">$nginxd</span> -s reload &amp;&amp; <span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;reload success&quot;</span><br>    <span class="hljs-keyword">fi</span><br><span class="hljs-keyword">esac</span><br></code></pre></td></tr></table></figure></li></ul><blockquote><p>将<code>nginx</code>添加开机启动</p></blockquote><ul><li><p>开机启动程序配置在<code>/etc/rc数字.d</code>文件中，实际上是<code>/etc/init.d/</code>目录下脚本的同名软连接，所以 add 命令后直接跟 nginxd 即可，使用 chkconfig 命令添加。<br /><br>开机启动实际上是调用脚本文件并传入 start 参数，相当于<code>service nginx start</code>或<code>nginx -s start</code></p><pre><code class="hljs">chkconfig --add nginxd</code></pre></li></ul><h4 id="配置文件-nginx-conf"><a href="#配置文件-nginx-conf" class="headerlink" title="配置文件 nginx.conf"></a>配置文件 nginx.conf</h4><blockquote><p>配置文件存放在安装目录下的 <strong>conf</strong> 文件夹中，每个文件都有一个同名的 <code>.default</code> 结尾的备份文件，<strong>nginx.conf</strong> 是主配置文件，其他配置文件都与其关联。</p></blockquote><ul><li><p>文件结构</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs bash">main                <span class="hljs-comment">#设置用户和用户组，日志位置，子进程数等</span><br>events&#123;&#125;            <span class="hljs-comment">#设置处理连接的方式</span><br>http&#123;               <span class="hljs-comment">#配置处理 http 请求的方式</span><br>    server&#123;         <span class="hljs-comment">#配置虚拟主机，可以配置多个</span><br>        location &#123;&#125; <span class="hljs-comment">#单个虚拟主机中，分为多个文件路径</span><br>    &#125;<br>    ...<br>&#125;<br></code></pre></td></tr></table></figure></li><li><p>完整 nginx.conf 如下：</p><pre><code class="hljs">#user  nobody; #设置用户和用户组，主进程默认所属用户为 **root**，设置用户只针对工作子进程，默认为 nobody，即不属于任何人user root root; #设置用户和组为 root,相应的日志文件等所属一并修改，目的为某些操作提供权限。或者在 执行 configure 编译时，指定 --user=xxx --group=xxxworker_processes  1; #工作子进程个数，建议设置为 cpu 个数 * cpu 核数#error_log 和 access_log 都是默认开启的，error_log 默认为 error 等级，最详细的是 debug 等级，server 或 location 都可单独配置 logaccess_log off; #关闭 access_log 功能error_log /dev/null; #关闭 error_log 功能#error_log  logs/error.log;#error_log  logs/error.log  notice;#error_log  logs/error.log  info;#pid        logs/nginx.pid; #设置 pid 的位置，默认在 logs/nginx.pidevents {    worker_connections  1024; #单个子进程最大连接数}http {    include       mime.types; #引入配置文件，此处为相对路径（/usr/local/nginx/conf）    default_type  application/octet-stream; #默认的文件类型    log_format  main  &#39;$remote_addr - $remote_user [$time_local] &quot;$request&quot; &#39;                    &#39;$status $body_bytes_sent &quot;$http_referer&quot; &#39;                    &#39;&quot;$http_user_agent&quot; &quot;$http_x_forwarded_for&quot;&#39;;    #access_log  logs/access.log  main;    sendfile        on; #开启高效文件传输模式    tcp_nopush     on; #将响应头和正文一起返回    tcp_nodelay    on; #取消响应的时延，默认为 on    server_tokens   off; #关闭在请求响应中 server 信息显示 nginx 版本信息        #keepalive_timeout  0;    keepalive_timeout  65; #设置长连接超时时间    gzip  on;        #include 可实现将配置保存在外部文件中，使用 include 引入，使 nginx.conf 看起来不会太冗长    #include    vhost.conf/upstream.host.conf; #引入单个配置文件    include    vhost.conf/*.conf; #批量引入文件        autoindex on; #nginx 默认不允许显示目录，当目录下                  #缺少 index 索引文件时，返回 403 错误                #设置目录列表，此处为允许所有虚拟主机均可展示目录详情                  #也可设置在 server 或 location 内，表示允许的范围不同        #deny all; #禁止所有用户访问所有主机，优先级低于 server 内的配置        server {        listen 80; #指定监听端口号        server_name dongliulin.com; #基于域名配置虚拟主机        location / {            root html/dongliulin; #指定根目录位置            index index.html; #指定首页/缺省页名称        }    }    server {        listen 8080;        server_name 192.168.1.156; #基于 IP 配置虚拟主机，并指定端口号         location / {            root html/dongliulin;            index ip.html;        }        access_log logs/dongliulin/access.log main; #指定日志文件存储路径，支持一个 server 一个日志存储位置                allow 192.168.1.58; #y允许指定 IP 用户访问        deny all; #禁止其他所有用户访问，内层配置优先于外层配置，即 location &gt; server &gt; http    }    server {        listen       80;        server_name  localhost;        #charset koi8-r;        access_log  logs/host1.access.log  main;        root html;        location / {            index index.html index.htm;        }        error_page  404              /404.html; #自定义错误页面，响应指定的状态码到指定页面，此处根目录已设置为 html        error_page  403              http://example.com/403.html; #也可以跳转到线上的某个页面        error_page  401   =200       /401.html; #修改响应中的状态码为 200        error_page  400   =          /400.html; #不指定具体的修改值，以跳转后的处理结果的状态码作为此次请求的响应状态码        # redirect server error pages to the static page /50x.html        #        error_page   500 502 503 504  /50x.html; #响应多个状态码以空格分隔，重定向到下面的 location        location = /50x.html {            root   html;        }        # proxy the PHP scripts to Apache listening on 127.0.0.1:80        #        #location ~ \.php$ {        #    proxy_pass   http://127.0.0.1;        #}        # pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000        #        #location ~ \.php$ {        #    root           html;        #    fastcgi_pass   127.0.0.1:9000;        #    fastcgi_index  index.php;        #    fastcgi_param  SCRIPT_FILENAME  /scripts$fastcgi_script_name;        #    include        fastcgi_params;        #}        # deny access to .htaccess files, if Apache&#39;s document root        # concurs with nginx&#39;s one        #        #location ~ /\.ht {        #    deny  all;        #}    }    # another virtual host using mix of IP-, name-, and port-based configuration    #    #server {    #    listen       8000;    #    listen       somename:8080;    #    server_name  somename  alias  another.alias;    #    location / {    #        root   html;    #        index  index.html index.htm;    #    }    #}    # HTTPS server    #    #server {    #    listen       443 ssl;    #    server_name  localhost;    #    ssl_certificate      cert.pem;    #    ssl_certificate_key  cert.key;    #    ssl_session_cache    shared:SSL:1m;    #    ssl_session_timeout  5m;    #    ssl_ciphers  HIGH:!aNULL:!MD5;    #    ssl_prefer_server_ciphers  on;    #    location / {    #        root   html;    #        index  index.html index.htm;    #    }    #}}</code></pre></li></ul><h4 id="虚拟主机配置"><a href="#虚拟主机配置" class="headerlink" title="虚拟主机配置"></a>虚拟主机配置</h4><ul><li>在 nginx 的配置文件 nginx.conf 中有如下一段配置，代表一个虚拟主机的基本配置<br># another virtual host using mix of IP-, name-, and port-based configuration<br>#<br>#server {<br>#    listen       8000; 端口或者 域名&#x2F;ip 只能选其一<br>#    listen       somename:8080;<br>#    server_name  somename  alias  another.alias;<br><br>#    location &#x2F; {<br>#        root   html;<br>#        index  index.html index.htm;<br>#    }<br>#}</li></ul><blockquote><p>基于端口的配置</p></blockquote><ul><li><pre><code class="hljs">  server {      listen          8080;      server_name     192.168.1.156;      root            html;      location / {          index index.html index.htm;      }  }</code></pre></li></ul><blockquote><p>基于 IP 的配置</p></blockquote><ul><li><pre><code class="hljs">  server {      listen          8080;      server_name     192.168.1.156;      root            html;      location / {          index index.html index.htm;      }  }</code></pre></li></ul><blockquote><p>基于域名的配置</p></blockquote><ul><li><pre><code class="hljs">  server {      listen          8080;      server_name     www.example.com example.com; #可写多个域名      server_name     *.example.com; #前缀使用通配符      server_name     www.example.*; #后缀使用通配符      server_name     *\.example\.com$; #匹配正则            #优先级：精准域名 &gt; 前缀通配符 &gt; 后缀通配符 &gt; 正则表达式            root            html;      location / {          index index.html index.htm;      }  }</code></pre></li></ul><h4 id="localtion-匹配规则"><a href="#localtion-匹配规则" class="headerlink" title="localtion 匹配规则"></a>localtion 匹配规则</h4><p>格式：location 前缀 uri {}，前缀有 <code>=、^~、~、~*、@</code> 五种。<br /><br>除 <code>=</code> 精准匹配外，其他匹配原则都是从上到下最大前缀匹配，即 uri 谁匹配的最多选择谁，匹配之后立即退出，余下 location 不在匹配。<br /></p><blockquote><p>优先级：<strong><code>= &gt; ^~ &gt; ~/~* &gt; 一般匹配</code></strong></p></blockquote><blockquote><p>location &#x2F; xxx{} 和 location &#x3D; &#x2F; xxx{} 的区别<br /><br>前者可匹配任意 uri 或网站根目录，代表网站的默认配置，后者只能匹配根目录本身。</p></blockquote><blockquote><p>root 和 alias<br /><br>前者会将请求的 uri 和 root 的值进行拼接，后者不会。</p></blockquote><ul><li><p>精确匹配<br>location &#x3D; &#x2F;ref.htm {<br>    root   html;<br>    index  index.html index.htm;<br>}</p></li><li><p>一般匹配<br>location &#x2F;ref.htm {<br>    root   html;<br>    index  index.html index.htm;<br>}</p></li><li><p>正则匹配(区分大小写)<br>location ~ &#x2F;ref {<br>    root   html;<br>    index  index.html index.htm;<br>}</p></li><li><p>正则匹配(不区分大小写)<br>location ~* &#x2F;ref {<br>    root   html;<br>    index  index.html index.htm;<br>}</p></li><li><p>不使用正则匹配<br>location ^~ &#x2F;ref {<br>    root   html;<br>    index  index.html index.htm;<br>}</p></li><li><p>@ 定义 location 块<br>location @name &#x2F;ref {<br>    root   html;<br>    index  index.html index.htm;<br>}</p></li></ul><h4 id="日志备份"><a href="#日志备份" class="headerlink" title="日志备份"></a>日志备份</h4><ul><li><p>日志格式化(在 nginx 中是默认开启的，包括日志的存放位置)<br>log_format  main  ‘$remote_addr - $remote_user [$time_local] “$request” ‘<br>                  ‘$status $body_bytes_sent “$http_referer” ‘<br>                  ‘“$http_user_agent” “$http_x_forwarded_for”‘;<br>nginx 内置变量：<br>$remote_addr #客户端 ip<br>$remote_user #客户端用户名<br>$time_local #本地时间<br>$request #请求的 uri 和 http 协议类型<br>$status #请求的响应状态码<br>$body_bytes_sent #发送给客户端主体文件的大小<br>http_referer #来路 url 地址<br>$http_user_agent #客户端浏览器信息<br>$http_x_forwarded_for #客户端 ip 列表，包括经过的代理</p></li><li><p>编写 shell 脚本，执行日志备份</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-meta">#!/bin/bash</span><br><span class="hljs-comment">#</span><br><br><span class="hljs-built_in">echo</span> start logback<br><br><span class="hljs-built_in">mv</span> -v /usr/local/nginx/logs/access.log<br>/usr/local/nginx/data/logback/$(<span class="hljs-built_in">date</span> -d yesterday +%Y-%m-%d).access.log<br><span class="hljs-comment">#将日志移动到备份日志目录并重命名</span><br><br><span class="hljs-comment">#方式一：使用信号量 -usr1 重新生成新的日志</span><br><span class="hljs-built_in">touch</span> /usr/local/nginx/logs/access.log <span class="hljs-comment">#生成新的日志文件</span><br><span class="hljs-built_in">kill</span> -usr1 `more /usr/local/nginx/logs/nginx.pid` <span class="hljs-comment">#日志更新，重新打开日志</span><br><br><span class="hljs-comment">#方式二：使用 nginx -s reopen 命令重新生成新的日志</span><br>/usr/local/nginx/sbin/nginx -s reopen <span class="hljs-comment">#重新打开日志，即创建新的日志文件</span><br><span class="hljs-built_in">echo</span> end logback<br></code></pre></td></tr></table></figure></li><li><p>使用 linux 的定时任务 crontab，实现日志的定时备份</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs bash">crontab -l#查看当前用户的定时任务列表<br>crontab -e#编辑列表<br>crontab -r#删除列表<br><span class="hljs-comment">#编辑列表，键入 cron 表达式，格式为</span><br><span class="hljs-comment">#    分 时 日 月 周 命令</span><br>键入 0 0 * * * /usr/local/nginx/logback.sh &gt; /dev/null 2 &gt; &amp;1 <span class="hljs-comment">#每日的凌晨零点零分进行日志备份，</span><br><span class="hljs-comment">#并将脚本执行的输出和结果舍弃保存退出后即时生效</span><br></code></pre></td></tr></table></figure></li></ul><h4 id="重写和重定向-rewrite"><a href="#重写和重定向-rewrite" class="headerlink" title="重写和重定向 rewrite"></a>重写和重定向 rewrite</h4><ul><li><p>使用 last、break 选项，则为重写，url 地址不变，使用 redirect、permanent 为重定向，url 地址改变</p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs nginx"><span class="hljs-section">server</span> &#123;<br>    <span class="hljs-attribute">listen</span> <span class="hljs-number">8083</span>;<br>    <span class="hljs-attribute">server_name</span> <span class="hljs-number">192.168.1.156</span>;<br>    <span class="hljs-attribute">root</span> html;<br>    <span class="hljs-attribute">index</span> index.html;<br>    <span class="hljs-section">location</span> / &#123;<br>        <span class="hljs-comment">#如果请求的文件不存在，就将请求重写到指定页面</span><br>        <span class="hljs-attribute">if</span> ( !-e <span class="hljs-variable">$request_filename</span> ) &#123;<br>            <span class="hljs-attribute">rewrite</span> <span class="hljs-string">&quot;^/.*&quot;</span> /default.html <span class="hljs-literal">break</span>;<br>        &#125;<br>    &#125;<br>&#125;<br><br><span class="hljs-attribute">rewrite</span> 可后跟四种标志位：<br><span class="hljs-literal">last</span>        <span class="hljs-comment">#跳过当前 rewrite 规则，继续下一条</span><br><span class="hljs-literal">break</span>       <span class="hljs-comment">#终止匹配，跳出</span><br><span class="hljs-literal">redirect</span>    <span class="hljs-comment">#临时重定向，url会改变，浏览器会保留旧地址的访问记录</span><br><span class="hljs-literal">permanent</span>   <span class="hljs-comment">#永久重定向，url会改变，浏览器不保留旧地址</span><br><br></code></pre></td></tr></table></figure></li></ul><h4 id="使用-gzip-进行压缩，节省流量"><a href="#使用-gzip-进行压缩，节省流量" class="headerlink" title="使用 gzip 进行压缩，节省流量"></a>使用 gzip 进行压缩，节省流量</h4><ul><li>gzip 可以设置在 http、server、location 内，达到不同的控制效果<figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs nginx"><span class="hljs-attribute">gzip</span>                <span class="hljs-literal">on</span>/<span class="hljs-literal">off</span>; <span class="hljs-comment">#开启或关闭 gzip 功能</span><br><span class="hljs-attribute">gzip_types</span>          test/plain application/javascript test/css; <span class="hljs-comment">#指定需要压缩的数据类型，</span><br><span class="hljs-comment">#不要多图片类型压缩，图片本身已是压缩格式，适得其反</span><br><span class="hljs-attribute">gzip_buffers</span>        <span class="hljs-number">4</span> <span class="hljs-number">20k</span>; <span class="hljs-comment">#指定压缩文件的存放空间大小</span><br><span class="hljs-attribute">gzip_min_length</span>     <span class="hljs-number">5k</span>; <span class="hljs-comment">#指定多大长度以上的数据才进行压缩</span><br><span class="hljs-attribute">gzip_comp_level</span>     <span class="hljs-number">4</span>; <span class="hljs-comment">#指定压缩比例,1-10,推荐 4</span><br><span class="hljs-attribute">gzip_http_version</span>   <span class="hljs-number">1</span>.<span class="hljs-number">0</span>; <span class="hljs-comment">#指定http请求类型进行压缩，默认是 1.1</span><br><br></code></pre></td></tr></table></figure></li></ul><h4 id="缓存-expires-设置过期时间"><a href="#缓存-expires-设置过期时间" class="headerlink" title="缓存 expires 设置过期时间"></a>缓存 expires 设置过期时间</h4><ul><li>时间未到，浏览器不会再次发起请求<br>location ~ .(js|css)$ {<br>    expires    12h; #12小时后过期<br>}<br><br>location ~ .(jpg|jpeg|png|gif|swf)$ {<br>    expires    30d; #30天后过期<br>}</li></ul><h4 id="反向代理-proxy-pass-参数"><a href="#反向代理-proxy-pass-参数" class="headerlink" title="反向代理 proxy_pass 参数"></a>反向代理 proxy_pass 参数</h4><ul><li><p>使用 proxy_pass 参数实现请求的跳转<br>server {<br>    listen        80;<br>    server_name   example.com;<br><br>    location &#x2F; {<br>        proxy_pass <a href="http://192.168.1.1/">http://192.168.1.1</a>; #请求转发至 192.168.1.1<br>    }<br>}</p></li><li><p>proxy_pass 有关的指令参数<br>location &#x2F; {<br>        proxy_pass <a href="http://testus/">http://testus</a>;<br>        proxy_set_header Host $host; #传递客户端的请求头<br>        proxy_set_header X-Real-IP $remote_addr; #传递客户端的真实ip<br>        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;<br>        #将客户端的真实ip追加到请求头后<br>    }</p></li></ul><h4 id="负载均衡-up-strean-定义服务器组，在-proxy-pass-中引用"><a href="#负载均衡-up-strean-定义服务器组，在-proxy-pass-中引用" class="headerlink" title="负载均衡 up_strean 定义服务器组，在 proxy_pass 中引用"></a>负载均衡 up_strean 定义服务器组，在 proxy_pass 中引用</h4><ul><li><p>负载均衡（load balance）方式</p><p>1、轮询，默认的方式，即 weight 都是 1；</p><pre><code class="hljs">upstream testus {    server 192.168.1.156:8081;    server 192.168.1.156:8082;    server 192.168.1.156:8083 backup; #后备主机，当其他主机都宕机后，由该主机处理请求    server 192.168.1.156:8083 down; #down 表示不参与轮询}</code></pre><p>2、权重（加权轮询），即改变主机的权重比例<br /><br>所有主机的权重值之和为一轮，每个主机的权重值代表该主机在本轮会被轮询到几次</p><pre><code class="hljs">upstream testus {    server 192.168.1.156:8081 weight=1 max_fails=1 fails_timeout=60;    #max_fails 代表最大失败次数，就把该主机暂停服务，fail_timeout 代表暂停服务的时间    server 192.168.1.156:8082 weight=3;    server 192.168.1.156:8083 backup;}</code></pre><p>3、ip_hash<br /><br>按照客户端的 ip 地址的 hash 值来分配请求，即做到固定 ip 访问固定虚拟主机，解决 session 共享的问题。<br /><br>在该模式下，weight 等参数无效，且不能使用 backup 参数；</p><pre><code class="hljs">upstream testus {    ip_hash;    server 192.168.1.156:8081 weight=1 max_fails=1 fails_timeout=60;    server 192.168.1.156:8082 weight=3;    server 192.168.1.156:8083 down;}</code></pre><p>4、第三方模块<br>需要下载第三方模块并与 nginx 一同编译安装，常用的有 fair 模式，根据服务器响应时间分配，时间短的优先。</p></li><li><p>upstream 和 proxy_pass</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><code class="hljs bash">upstream testStream &#123; <span class="hljs-comment">#配置服务器组</span><br>    server 192.168.1.156:8081 weight=1; <span class="hljs-comment">#默认的 weight 为 1；</span><br>    server 192.168.1.156:8082 weight=1;<br>&#125;<br><br>server &#123;#模拟后端服务器1<br>    listen 8081;<br>    server_name 192.168.1.156;<br><br>    location / &#123;<br>        root html/8081/test;<br>        index index.html;<br>    &#125;<br><br>    access_log logs/8081/access.log main;<br>&#125;<br><br>server &#123;#模拟后端服务器2<br>    listen 8082;<br>    server_name 192.168.1.156;<br><br>    location / &#123;<br>        root html/8082/test;<br>        index index.html;<br>    &#125;<br><br>    access_log logs/8082/access.log main;<br>&#125;<br><br>server &#123;#接收请求地址，进行分发<br>    listen 8080;<br>    server_name 192.168.1.156;<br><br>    location / &#123;#分发到 testStream 服务器组<br>        proxy_pass http://testStream;<br>    &#125;<br><br>    access_log logs/dongliulin/access.log main;<br>&#125;<br></code></pre></td></tr></table></figure></li></ul><h4 id="缓存"><a href="#缓存" class="headerlink" title="缓存"></a>缓存</h4><ul><li>永久缓存，缓存在服务器磁盘上。使用 proxy_store 指令<figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs awk">location / &#123;<br>    proxy_store on; <span class="hljs-comment">#开启本地存储</span><br>    proxy_store_access user:rw group:rw all:r; <span class="hljs-comment">#设置缓存文件权限</span><br>    proxy_temp_path cache_temp; <span class="hljs-comment">#设置文件临时存储位置</span><br>    <span class="hljs-keyword">if</span> (!-e <span class="hljs-variable">$request_filename</span>) &#123; <span class="hljs-comment">#如果缓存中无该请求的文件，再请求后端</span><br>        proxy_pass http:<span class="hljs-regexp">//</span>testus;<br>    &#125;<br><br>    root <span class="hljs-regexp">/usr/</span>local<span class="hljs-regexp">/nginx/</span>cache; <span class="hljs-comment">#缓存文件保存的位置</span><br>    &#125;<br>···<br><br></code></pre></td></tr></table></figure></li><li>临时缓存<br /><br>使用 proxy_cache_path 设置缓存的位置及大小、删除时间等。<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><code class="hljs bash">http &#123;<br>    <span class="hljs-comment">#设置缓存临时文件目录</span><br>    proxy_temp_path     /usr/local/nginx/proxy_temp_dir;<br>    <span class="hljs-comment">#设置缓存文件目录</span><br>    <span class="hljs-comment">#levels=1:2 代表层级目录数，2 代表会创建两个子目录</span><br>    <span class="hljs-comment">#keys_zone=cache_one:50m 代表设置缓存区名称和大小 50M</span><br>    <span class="hljs-comment">#inactive=1m 配置删除无访问缓存文件的时间</span><br>    <span class="hljs-comment">#max_size=500m 设置缓存在磁盘的空间大小</span><br>    proxy_cache_path    /usr/local/nginx/proxy_cache_dir levels=1:2<br>                        keys_zone=cache_one:50m inactive=1m  max_size=500m;<br><br>    server &#123;<br>        listen 8080;<br>        server_name 192.168.1.156;<br>        add_header X-Via <span class="hljs-variable">$server_addr</span>; <span class="hljs-comment">#向响应头中加入服务器ip地址</span><br>        add_header X-Cache <span class="hljs-variable">$upstream_cache_status</span>; <span class="hljs-comment">#向响应头中加入缓存触发状态，HIT代表命中，</span><br>        <span class="hljs-comment">#即访问了缓存文件</span><br>        location / &#123;<br>            proxy_cache        cache_one; <span class="hljs-comment">#设置缓存区名称，对应 keys_zone 中的配置</span><br>            proxy_cache_key    $host$uri$is_args<span class="hljs-variable">$args</span>; <span class="hljs-comment">#设置缓存的 key 值</span><br>            proxy_cache_valid  200 10m; <span class="hljs-comment">#针对不同响应状态码设置不同的缓存时间</span><br>            proxy_cache_valid  304 2m;<br>            proxy_cache_valid  any 1m; <span class="hljs-comment">#未设置的状态码均采用该设置</span><br>            proxy_pass http://testus;<br>    &#125;<br>&#125;<br><br><span class="hljs-comment">#proxy_cache_key 中使用的内置变量：</span><br><span class="hljs-comment"># $host 服务器域名</span><br><span class="hljs-comment"># $uri 域名和参数之间的部分</span><br><span class="hljs-comment"># $is_args 是否有参数，有的话值为 ？，无则为空字符串</span><br><span class="hljs-comment"># $args 参数，使用 参数名=参数值&amp;参数名=...的格式，没有参数时为空字符串</span><br></code></pre></td></tr></table></figure></li></ul><blockquote><p>https 配置即 SSL</p></blockquote><ul><li><p>开启 https 需要 http_ssl_module 模块的支持，需要重新编译 nginx<br>cd &#x2F;usr&#x2F;nginx-1.16.1 #进入 nginx 的解压目录<br>.&#x2F;configure –with-http_ssl_module #重新生成编译所需的 makefile 文件，加入 ssl 模块<br>make #重新编译 nginx 生成 可执行的二进制文件 “nginx”，<br>#在 解压目录下的 objs 文件夹内的名为 nginx 的文件<br>cp objs&#x2F;nginx &#x2F;usr&#x2F;local&#x2F;nginx&#x2F;sbin #替换原有 nginx 二进制文件</p></li><li><p>生成证书和私钥，使用 openssl 工具生成本地证书，浏览器会提示风险，但可以使用<br>mkdir ssl #在 conf 目录下新建目录 ssl 存放证书相关<br>cd ssl&#x2F;<br>openssl genrsa -out private.key 2048 # 生成私钥<br>openssl req -new -key private.key -out public.csr #生成公钥<br>#生成证书文件，指定日期为 30 天<br>openssl x509 -req -days 30 -in public.csr -signkey private.key -out server.crt</p></li><li><p>配置 nginx.conf 添加 https 配置</p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs nginx"><span class="hljs-section">server</span> &#123;<br>    <span class="hljs-attribute">listen</span>       <span class="hljs-number">443</span> ssl;<br>    <span class="hljs-attribute">server_name</span>  www.dongliulin.com dongliulin.com;<br><br>    <span class="hljs-attribute">ssl_certificate</span>      ssl/server.crt; <span class="hljs-comment">#指定证书文件位置</span><br>    <span class="hljs-attribute">ssl_certificate_key</span>  ssl/private.key; <span class="hljs-comment">#指定私钥位置</span><br><br>    <span class="hljs-attribute">ssl_session_cache</span>    shared:SSL:<span class="hljs-number">1m</span>;<br>    <span class="hljs-attribute">ssl_session_timeout</span>  <span class="hljs-number">5m</span>;<br><br>   <span class="hljs-comment"># ssl_ciphers  HIGH:!aNULL:!MD5;</span><br>   <span class="hljs-comment"># ssl_prefer_server_ciphers  on;</span><br><br>    <span class="hljs-section">location</span> / &#123;<br>        <span class="hljs-attribute">root</span>   html;<br>        <span class="hljs-attribute">index</span>  index.html index.htm;<br>    &#125;<br>&#125;<br><br></code></pre></td></tr></table></figure></li></ul><h4 id="nginx-KeepAlived-实现-nginx-的高可用性"><a href="#nginx-KeepAlived-实现-nginx-的高可用性" class="headerlink" title="nginx + KeepAlived 实现 nginx 的高可用性"></a>nginx + KeepAlived 实现 nginx 的高可用性</h4><blockquote><p>主机 keepalived 定时监控 nginx         服务是否在运行，如果否则尝试重启，重启失败的话，关闭自身，将网络交由从机 keepalived。对外访问的是 keepalived 的虚拟 ip，主从机映射到了相同的虚拟 ip。<strong>主从机通过 112 端口相互访问，防火墙需放开该端口</strong></p></blockquote><ul><li><p>安装配置 KeepAlived</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment">#下载 keepalived 到指定路径，keepalived.org 官网地址</span><br>wget https://keepalived.org/software/keepalived-2.0.19.tar.gz<br><span class="hljs-comment">#解压，编译、安装</span><br>tar keepalived-2.0.19.tar.gz<br><span class="hljs-built_in">cd</span> keepalived-2.0.19<br>./configure<br>make &amp;&amp; make install<br><span class="hljs-comment">#添加系统服务、开机启动，默认的脚本执行文件在如下目录</span><br><span class="hljs-built_in">cp</span> keepalived-2.0.19/keepalived/etc/init.d/keepalived /etc/init.d/<br>chkconfig keepalived on <br><span class="hljs-comment">#添加配置文件,默认的加载配置文件路径为 /etc/keepalived/</span><br><span class="hljs-built_in">mkdir</span> /etc/keepalived<br>vim /etc/keepalived/keepalived.conf<br><span class="hljs-comment">#链接配置文件和程序文件</span><br><span class="hljs-built_in">ln</span> -s /usr/local/etc/sysconfig/keepalived /etc/sysconfig/<br><span class="hljs-built_in">ln</span> -s /usr/local/sbin/keepalived /usr/sbin/<br><br><span class="hljs-comment">#即可使用 service 控制 keepalived</span><br>service keepalived start<br><br>journalctl -xe <span class="hljs-comment">#查看 keepalived 的运行日志，实际上查询的是 systemd 的系统日志</span><br></code></pre></td></tr></table></figure></li><li><p>实现 keepalived 高可用</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment">#两台虚拟机都安装 keepalived 并配置相同的 虚拟 ip，即主从配置</span><br><span class="hljs-comment">#编写配置文件</span><br>vim /etc/keepalived/keepalived.conf<br><span class="hljs-comment">#加入如下配置：</span><br>! Configuration File <span class="hljs-keyword">for</span> keepalived <span class="hljs-comment"># ! 代表注释内容</span><br>vrrp_instance VI_1 &#123;<br>    state MASTER <span class="hljs-comment">#从机为 BACKUP</span><br>    interface ens33 <span class="hljs-comment">#指定绑定虚拟 ip 到指定的网卡</span><br>    virtual_router_id 51 <span class="hljs-comment">#主从机的 router_id 需一致</span><br>    priority 100 <span class="hljs-comment">#优先级，主机应大于从机</span><br>    advert_int 1 <span class="hljs-comment">#主从机相互访问时间间隔</span><br>    authentication &#123;<br>        auth_type PASS <span class="hljs-comment">#主从机访问的验证方式，密码</span><br>        auth_pass 1111 <span class="hljs-comment">#密码值</span><br>    &#125;<br>    virtual_ipaddress &#123;<br>        192.168.1.199 <span class="hljs-comment">#虚拟 ip 值，此处在虚拟机中配置，需和虚拟机 ip 在同一 ip</span><br>                      <span class="hljs-comment">#段，即 192.168.1.xxx</span><br>    &#125;<br>&#125;<br><br>主从机配置完成启动后，访问虚拟ip 192.168.1.199 会优先访问主机网络，停掉主机的网络服务后，<br>虚拟ip 自动切换到从机的网络<br></code></pre></td></tr></table></figure></li><li><p>使 keepalived 监测 nginx 服务状态<br /><br>需考虑好 nginx 监控脚本的执行时间和 keepalived 中配置的脚本执行时间间隔，否则脚本未执行完，新的监控任务又在执行，会产生混乱</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment">#修改配置文件，主从机都修改</span><br>vim /etc/keepalived/keepalived.conf<br>! Configuration File <span class="hljs-keyword">for</span> keepalived<br><br>global_defs &#123;<br>enable_script_security <span class="hljs-comment">#开启脚本安全设置</span><br>script_user root <span class="hljs-comment">#设置拥有脚本执行权限的用户</span><br>&#125;<br><span class="hljs-comment">#定义监控 nginx 服务的脚本执行模块</span><br>vrrp_script check_ngx &#123;<br>script <span class="hljs-string">&quot;/etc/keepalived/check_ngx.sh&quot;</span> <span class="hljs-comment">#指定脚本文件的位置</span><br>interval 7  <span class="hljs-comment">#间隔 7 秒执行一次脚本</span><br>weight -20 <span class="hljs-comment">#若脚本执行失败，该主机权重减少 20</span><br>user root <span class="hljs-comment">#指定脚本执行的用户属主</span><br>&#125;<br><br>vrrp_instance INS_1 &#123;<br>    state MASTER<br>    interface ens33 <br>    virtual_router_id 51<br>    priority 100<br>    advert_int 1<br><br>    authentication &#123;<br>        auth_type PASS<br>        auth_pass 1111<br>    &#125;<br>    <br>    virtual_ipaddress &#123;<br>        192.168.1.199<br>    &#125;<br>    <span class="hljs-comment">#设置该主机执行哪些脚本配置</span><br>    track_script &#123;<br>        check_ngx<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure></li><li><p>编写监控 nginx 服务的脚本文件 <code>check_ngx.sh</code></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-meta">#!/bin/bash</span><br><span class="hljs-comment">#</span><br><br><span class="hljs-comment">#count nginx`s process</span><br><span class="hljs-function"><span class="hljs-title">count_nginxd_ps</span></span>()<br>&#123;<br>    <span class="hljs-built_in">echo</span> `ps -C nginx --no-header | <span class="hljs-built_in">wc</span> -l`<br>    <span class="hljs-comment">#echo `ps -ef|grep nginx|grep -v grep|grep -v $$ |wc -l`</span><br>&#125;<br><br><span class="hljs-keyword">if</span> [ `count_nginxd_ps` -eq 0 ]; <span class="hljs-keyword">then</span><br>    service nginx start <br><br><span class="hljs-keyword">fi</span><br><br><span class="hljs-built_in">sleep</span> 5<br><br><span class="hljs-keyword">if</span> [ `count_nginxd_ps` -eq 0 ]; <span class="hljs-keyword">then</span><br>    service keepalived stop <br><span class="hljs-keyword">fi</span><br></code></pre></td></tr></table></figure></li><li><p>关于 主从机配置中的 <code>priority</code> 和 <code>weight</code> 关系</p></li></ul><h4 id="与-web-容器（apache、tomcat、openResty）整合实现动静分离"><a href="#与-web-容器（apache、tomcat、openResty）整合实现动静分离" class="headerlink" title="与 web 容器（apache、tomcat、openResty）整合实现动静分离"></a>与 web 容器（apache、tomcat、openResty）整合实现动静分离</h4>]]></content>
    
    
    <categories>
      
      <category>Nginx</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Nginx</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>zTree 右键菜单自定义实现</title>
    <link href="/2019/10/10/zTree%E6%A0%91%E7%8A%B6%E5%9B%BE%E5%8F%8A%E5%8F%B3%E9%94%AE%E8%8F%9C%E5%8D%95/"/>
    <url>/2019/10/10/zTree%E6%A0%91%E7%8A%B6%E5%9B%BE%E5%8F%8A%E5%8F%B3%E9%94%AE%E8%8F%9C%E5%8D%95/</url>
    
    <content type="html"><![CDATA[<h3 id="html代码"><a href="#html代码" class="headerlink" title="html代码"></a>html代码</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-meta">&lt;!DOCTYPE <span class="hljs-keyword">html</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">http-equiv</span>=<span class="hljs-string">&quot;X-UA-Compatible&quot;</span> <span class="hljs-attr">content</span>=<span class="hljs-string">&quot;IE=edge,Chrome=1&quot;</span> /&gt;</span><span class="hljs-comment">&lt;!-- 兼容ie --&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">html</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">head</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">base</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;&lt;%=basePath%&gt;&quot;</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">title</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">title</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;text/javascript&quot;</span>&gt;</span><span class="language-javascript"></span><br><span class="language-javascript"><span class="hljs-keyword">var</span> basePath = <span class="hljs-string">&quot;$&#123;basePath&#125;&quot;</span>;</span><br><span class="language-javascript"><span class="hljs-keyword">var</span> staticBasePath = <span class="hljs-string">&quot;$&#123;staticBasePath&#125;&quot;</span>;;</span><br><span class="language-javascript"></span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br><span class="hljs-comment">&lt;!-- jquery 文件--&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;text/javascript&quot;</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;skin/meteringTS/jquery/jquery-1.9.1.js&quot;</span> &gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;text/javascript&quot;</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;skin/meteringTS/jquery/jquery.form.js&quot;</span> &gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br><span class="hljs-comment">&lt;!-- bootstrap 文件 --&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">link</span> <span class="hljs-attr">rel</span>=<span class="hljs-string">&quot;stylesheet&quot;</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;skin/meteringTS/bootstrap/css/bootstrap.css&quot;</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;skin/meteringTS/bootstrap/js/bootstrap.min.js&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">link</span> <span class="hljs-attr">rel</span>=<span class="hljs-string">&quot;stylesheet&quot;</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;skin/ztree/css/zTreeStyle/zTreeStyle.css&quot;</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;text/css&quot;</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;text/javascript&quot;</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;skin/ztree/js/jquery.ztree.core.js&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;text/javascript&quot;</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;skin/ztree/js/jquery.ztree.excheck.js&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;text/javascript&quot;</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;skin/ztree/js/jquery.ztree.exedit.js&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;text/javascript&quot;</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;skin/ztree/js/jquery.ztree.exhide.min.js&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">head</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">body</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">style</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;text/css&quot;</span>&gt;</span><span class="language-css"></span><br><span class="language-css"><span class="hljs-selector-class">.table</span> &#123;</span><br><span class="language-css">        <span class="hljs-attribute">table-layout</span>: fixed <span class="hljs-meta">!important</span>;</span><br><span class="language-css">    &#125;</span><br><span class="language-css"><span class="hljs-selector-class">.table</span> <span class="hljs-selector-tag">tbody</span> <span class="hljs-selector-tag">tr</span> <span class="hljs-selector-tag">td</span>&#123;</span><br><span class="language-css">    <span class="hljs-attribute">overflow</span>: hidden;</span><br><span class="language-css">    <span class="hljs-attribute">text-overflow</span>:ellipsis;</span><br><span class="language-css">    <span class="hljs-attribute">white-space</span>: nowrap;</span><br><span class="language-css">&#125;</span><br><span class="language-css"><span class="hljs-selector-class">.nav-tabs</span>&gt;<span class="hljs-selector-tag">LI</span><span class="hljs-selector-class">.active</span>&gt;<span class="hljs-selector-tag">A</span> &#123;</span><br><span class="language-css"><span class="hljs-attribute">color</span>: <span class="hljs-number">#fff</span> <span class="hljs-meta">!important</span>;</span><br><span class="language-css"><span class="hljs-attribute">background</span>: <span class="hljs-number">#75BEAD</span> <span class="hljs-meta">!important</span></span><br><span class="language-css">&#125;</span><br><span class="language-css"></span><br><span class="language-css"><span class="hljs-selector-class">.nav-tabs</span>&gt;<span class="hljs-selector-tag">LI</span>&gt;<span class="hljs-selector-tag">A</span> &#123;</span><br><span class="language-css"><span class="hljs-attribute">color</span>: <span class="hljs-number">#75B0A6</span> <span class="hljs-meta">!important</span></span><br><span class="language-css">&#125;</span><br><span class="language-css"></span><br><span class="language-css"><span class="hljs-selector-class">.nav-tabs</span>&gt;<span class="hljs-selector-tag">LI</span> &#123;</span><br><span class="language-css"><span class="hljs-attribute">border-right</span>: <span class="hljs-number">1px</span> solid <span class="hljs-number">#8ED7D2</span></span><br><span class="language-css">&#125;</span><br><span class="language-css"></span><br><span class="language-css"><span class="hljs-selector-class">.nav-tabs</span>&gt;<span class="hljs-selector-tag">LI</span>&gt;<span class="hljs-selector-tag">A</span> &#123;</span><br><span class="language-css"><span class="hljs-attribute">margin-right</span>: <span class="hljs-number">0px</span></span><br><span class="language-css">&#125;</span><br><span class="language-css"></span><br><span class="language-css"><span class="hljs-selector-class">.nav-tabs</span> &#123;</span><br><span class="language-css"><span class="hljs-attribute">border-bottom</span>: <span class="hljs-number">1px</span> solid <span class="hljs-number">#8ED7D2</span> <span class="hljs-meta">!important</span></span><br><span class="language-css">&#125;</span><br><span class="language-css"></span><br><span class="language-css"><span class="hljs-selector-class">.nav</span>&gt;<span class="hljs-selector-tag">LI</span>&gt;<span class="hljs-selector-tag">A</span> &#123;</span><br><span class="language-css"><span class="hljs-attribute">padding</span>: <span class="hljs-number">6px</span> <span class="hljs-number">12px</span></span><br><span class="language-css">&#125;</span><br><span class="language-css"></span><br><span class="language-css"><span class="hljs-selector-class">.tab-pane</span> &#123;</span><br><span class="language-css"><span class="hljs-attribute">height</span>: <span class="hljs-number">590px</span></span><br><span class="language-css">&#125;</span><br><span class="language-css"></span><br><span class="language-css"><span class="hljs-selector-class">.btn</span> &#123;</span><br><span class="language-css"><span class="hljs-attribute">color</span>: <span class="hljs-number">#64B9B4</span>;</span><br><span class="language-css"><span class="hljs-attribute">border-color</span>: <span class="hljs-number">#54B2AC</span>;</span><br><span class="language-css">&#125;</span><br><span class="language-css"></span><br><span class="language-css"><span class="hljs-comment">/* 自动补全数据多时显示下拉框 */</span></span><br><span class="language-css"><span class="hljs-selector-class">.ui-autocomplete</span> &#123;</span><br><span class="language-css"><span class="hljs-attribute">max-height</span>: <span class="hljs-number">200px</span>;</span><br><span class="language-css"><span class="hljs-attribute">overflow-y</span>: auto; <span class="hljs-comment">/* 防止水平滚动条 */</span></span><br><span class="language-css"><span class="hljs-attribute">overflow-x</span>: hidden;</span><br><span class="language-css">&#125;</span><br><span class="language-css"></span><br><span class="language-css"><span class="hljs-comment">/* IE 6 不支持 max-height,我们使用 height 代替，但是这会强制菜单总是显示为那个高度 */</span></span><br><span class="language-css"><span class="hljs-selector-class">.ui-autocomplete</span> &#123;</span><br><span class="language-css"><span class="hljs-attribute">height</span>: <span class="hljs-number">200px</span>;</span><br><span class="language-css">&#125;</span><br><span class="language-css"></span><br><span class="language-css"><span class="hljs-selector-class">.dist_statis</span> &#123;</span><br><span class="language-css"><span class="hljs-attribute">border</span>: none;</span><br><span class="language-css"><span class="hljs-attribute">min-width</span>: <span class="hljs-number">500px</span>;</span><br><span class="language-css">&#125;</span><br><span class="language-css"></span><br><span class="language-css"><span class="hljs-selector-class">.search</span> &#123;</span><br><span class="language-css"><span class="hljs-attribute">padding-bottom</span>: <span class="hljs-number">0px</span>;</span><br><span class="language-css"><span class="hljs-attribute">min-width</span>: <span class="hljs-number">500px</span>;</span><br><span class="language-css">&#125;</span><br><span class="language-css"></span><br><span class="language-css"><span class="hljs-selector-class">.fault_btn</span> &#123;</span><br><span class="language-css"><span class="hljs-attribute">margin-top</span>: <span class="hljs-number">10px</span></span><br><span class="language-css">&#125;</span><br><span class="language-css"></span><br><span class="language-css"><span class="hljs-selector-class">.statis_top</span> <span class="hljs-selector-tag">ul</span> &#123;</span><br><span class="language-css"><span class="hljs-attribute">padding</span>: <span class="hljs-number">0</span>;</span><br><span class="language-css"><span class="hljs-attribute">padding-left</span>: <span class="hljs-number">1%</span></span><br><span class="language-css">&#125;</span><br><span class="language-css"></span><br><span class="language-css"><span class="hljs-selector-class">.statis_top</span> <span class="hljs-selector-tag">ul</span> <span class="hljs-selector-tag">li</span> &#123;</span><br><span class="language-css"><span class="hljs-attribute">cursor</span>: pointer</span><br><span class="language-css">&#125;</span><br><span class="language-css"></span><br><span class="language-css"><span class="hljs-selector-class">.asset_right</span> <span class="hljs-selector-tag">ul</span> &#123;</span><br><span class="language-css"><span class="hljs-attribute">margin-top</span>: <span class="hljs-number">2px</span></span><br><span class="language-css">&#125;</span><br><span class="language-css"></span><br><span class="language-css"><span class="hljs-selector-class">.asset_right</span> <span class="hljs-selector-tag">ul</span> <span class="hljs-selector-tag">li</span> &#123;</span><br><span class="language-css"><span class="hljs-attribute">float</span>: left;</span><br><span class="language-css"><span class="hljs-attribute">list-style</span>: none;</span><br><span class="language-css"><span class="hljs-attribute">margin-right</span>: <span class="hljs-number">15px</span>;</span><br><span class="language-css"><span class="hljs-attribute">cursor</span>: pointer;</span><br><span class="language-css"><span class="hljs-attribute">display</span>: inline-block;</span><br><span class="language-css"><span class="hljs-attribute">line-height</span>: <span class="hljs-number">24px</span>;</span><br><span class="language-css"><span class="hljs-attribute">text-align</span>: center;</span><br><span class="language-css"><span class="hljs-attribute">color</span>: <span class="hljs-number">#54B2AC</span></span><br><span class="language-css">&#125;</span><br><span class="language-css"></span><br><span class="language-css"><span class="hljs-selector-class">.asset_title</span> &#123;</span><br><span class="language-css"><span class="hljs-attribute">min-width</span>: <span class="hljs-number">500px</span>;</span><br><span class="language-css">&#125;</span><br><span class="language-css"></span><br><span class="language-css"><span class="hljs-selector-class">.w80</span> &#123;</span><br><span class="language-css"><span class="hljs-attribute">width</span>: <span class="hljs-number">80px</span>;</span><br><span class="language-css"><span class="hljs-attribute">height</span>: <span class="hljs-number">24px</span>;</span><br><span class="language-css"><span class="hljs-attribute">background</span>: <span class="hljs-built_in">url</span>(<span class="hljs-string">skin/meteringTS/custom/images/btn-bg-80.png</span>)</span><br><span class="language-css">&#125;</span><br><span class="language-css"></span><br><span class="language-css"><span class="hljs-selector-class">.w120</span> &#123;</span><br><span class="language-css"><span class="hljs-attribute">width</span>: <span class="hljs-number">120px</span>;</span><br><span class="language-css"><span class="hljs-attribute">height</span>: <span class="hljs-number">24px</span>;</span><br><span class="language-css"><span class="hljs-attribute">background</span>: <span class="hljs-built_in">url</span>(<span class="hljs-string">skin/meteringTS/custom/images/btn-bg-120.png</span>)</span><br><span class="language-css">&#125;</span><br><span class="language-css"></span><br><span class="language-css"><span class="hljs-selector-class">.w80</span><span class="hljs-selector-pseudo">:hover</span> &#123;</span><br><span class="language-css"><span class="hljs-attribute">background</span>: <span class="hljs-built_in">url</span>(<span class="hljs-string">skin/meteringTS/custom/images/btn-bg-80-on.png</span>)</span><br><span class="language-css">&#125;</span><br><span class="language-css"></span><br><span class="language-css"><span class="hljs-selector-class">.w120</span><span class="hljs-selector-pseudo">:hover</span> &#123;</span><br><span class="language-css"><span class="hljs-attribute">background</span>: <span class="hljs-built_in">url</span>(<span class="hljs-string">skin/meteringTS/custom/images/btn-bg-120-on.png</span>)</span><br><span class="language-css">&#125;</span><br><span class="language-css"></span><br><span class="language-css"><span class="hljs-comment">/* 弹出框样式修改 */</span></span><br><span class="language-css"><span class="hljs-selector-class">.ui-dialog-buttons</span>,<span class="hljs-selector-class">.ui-widget-content</span> &#123;</span><br><span class="language-css">&#125;</span><br><span class="language-css"></span><br><span class="language-css"><span class="hljs-selector-class">.ui-dialog-content</span> &#123;</span><br><span class="language-css"><span class="hljs-attribute">border</span>: none <span class="hljs-meta">!important</span></span><br><span class="language-css">&#125;</span><br><span class="language-css"></span><br><span class="language-css"><span class="hljs-selector-class">.ui-dialog-buttons</span> <span class="hljs-selector-class">.ui-dialog-content</span> &#123;</span><br><span class="language-css">&#125;</span><br><span class="language-css"></span><br><span class="language-css"><span class="hljs-selector-class">.ui-dialog-buttonset</span> <span class="hljs-selector-tag">button</span> &#123;</span><br><span class="language-css"><span class="hljs-attribute">border-color</span>: <span class="hljs-number">#E3F3F2</span> <span class="hljs-meta">!important</span>;</span><br><span class="language-css"><span class="hljs-attribute">background-color</span>: <span class="hljs-number">#E3F3F2</span> <span class="hljs-meta">!important</span>;</span><br><span class="language-css"><span class="hljs-attribute">outline</span>: none <span class="hljs-meta">!important</span>;</span><br><span class="language-css">&#125;</span><br><span class="language-css"></span><br><span class="language-css"><span class="hljs-selector-class">.onLeft</span> &#123;</span><br><span class="language-css"><span class="hljs-attribute">width</span>: <span class="hljs-number">25%</span>;</span><br><span class="language-css"><span class="hljs-attribute">height</span>:<span class="hljs-number">90%</span>;</span><br><span class="language-css"><span class="hljs-attribute">float</span><span class="hljs-selector-pseudo">:left</span>;</span><br><span class="language-css"><span class="hljs-attribute">margin</span>: <span class="hljs-number">10px</span>;</span><br><span class="language-css"><span class="hljs-attribute">overflow</span>: hidden;</span><br><span class="language-css">    <span class="hljs-attribute">overflow-y</span>: auto;</span><br><span class="language-css"><span class="hljs-attribute">background-color</span>:<span class="hljs-number">#F6FCFC</span>;</span><br><span class="language-css"><span class="hljs-attribute">border</span>:<span class="hljs-number">1px</span> solid <span class="hljs-number">#6EC5B9</span>;</span><br><span class="language-css">&#125;</span><br><span class="language-css"></span><br><span class="language-css"><span class="hljs-selector-tag">div</span><span class="hljs-selector-class">.onLeft</span> &#123;</span><br><span class="language-css"><span class="hljs-attribute">position</span>: fixed;</span><br><span class="language-css"><span class="hljs-attribute">top</span>: <span class="hljs-number">0px</span>;</span><br><span class="language-css">&#125;</span><br><span class="language-css"></span><br><span class="language-css"><span class="hljs-selector-tag">div</span><span class="hljs-selector-class">.inquiry</span> &#123;</span><br><span class="language-css">    <span class="hljs-attribute">position</span>: relative;</span><br><span class="language-css">    <span class="hljs-attribute">left</span>: <span class="hljs-number">40px</span>;</span><br><span class="language-css">    <span class="hljs-attribute">margin</span>: <span class="hljs-number">10px</span>;</span><br><span class="language-css">    <span class="hljs-attribute">width</span>: <span class="hljs-number">200px</span>;</span><br><span class="language-css">&#125;</span><br><span class="language-css"></span><br><span class="language-css"><span class="hljs-selector-class">.table</span> &gt; <span class="hljs-selector-tag">TBODY</span> &gt; <span class="hljs-selector-tag">TR</span> &gt; <span class="hljs-selector-tag">TD</span> &#123;</span><br><span class="language-css">    <span class="hljs-attribute">padding</span>: <span class="hljs-number">4px</span> <span class="hljs-number">8px</span>;</span><br><span class="language-css">&#125;</span><br><span class="language-css"></span><br><span class="language-css"><span class="hljs-selector-tag">div</span><span class="hljs-selector-id">#rMenu</span> &#123;</span><br><span class="language-css"><span class="hljs-attribute">position</span>:absolute;</span><br><span class="language-css"><span class="hljs-attribute">visibility</span>:hidden;</span><br><span class="language-css"><span class="hljs-attribute">top</span>:<span class="hljs-number">0</span>;</span><br><span class="language-css"><span class="hljs-attribute">text-align</span>: center;</span><br><span class="language-css"><span class="hljs-attribute">padding</span>: <span class="hljs-number">2px</span>;</span><br><span class="language-css"><span class="hljs-attribute">background</span>:<span class="hljs-number">#DFDFDF</span>;</span><br><span class="language-css">&#125;</span><br><span class="language-css"></span><br><span class="language-css"><span class="hljs-selector-tag">div</span><span class="hljs-selector-id">#rMenu</span> <span class="hljs-selector-tag">ul</span> <span class="hljs-selector-tag">li</span>&#123;</span><br><span class="language-css"><span class="hljs-attribute">margin</span>: <span class="hljs-number">1px</span> <span class="hljs-number">0</span>;</span><br><span class="language-css"><span class="hljs-attribute">padding</span>: <span class="hljs-number">0</span> <span class="hljs-number">5px</span>;</span><br><span class="language-css"><span class="hljs-attribute">cursor</span>: pointer;</span><br><span class="language-css"><span class="hljs-attribute">list-style</span>: none outside none;</span><br><span class="language-css"><span class="hljs-attribute">background-color</span>: <span class="hljs-number">#DFDFDF</span>;</span><br><span class="language-css">&#125;</span><br><span class="language-css"></span><br><span class="language-css"><span class="hljs-selector-tag">div</span><span class="hljs-selector-id">#rMenu</span> <span class="hljs-selector-tag">ul</span>&#123;</span><br><span class="language-css"><span class="hljs-attribute">padding</span>: <span class="hljs-number">0px</span>;</span><br><span class="language-css">&#125;</span><br><span class="language-css"></span><br><span class="language-css"><span class="hljs-selector-class">.ztree</span> * &#123;</span><br><span class="language-css"><span class="hljs-attribute">font-size</span>: <span class="hljs-number">14px</span>;</span><br><span class="language-css">&#125;</span><br><span class="language-css"></span><br><span class="language-css"><span class="hljs-selector-class">.ztree</span> <span class="hljs-selector-tag">li</span> <span class="hljs-selector-tag">a</span> <span class="hljs-selector-tag">input</span><span class="hljs-selector-class">.rename</span> &#123;</span><br><span class="language-css"><span class="hljs-attribute">height</span>:<span class="hljs-number">22px</span>; </span><br><span class="language-css"><span class="hljs-attribute">width</span>:<span class="hljs-number">100%</span>; </span><br><span class="language-css"><span class="hljs-attribute">font-size</span>: <span class="hljs-number">14px</span>;</span><br><span class="language-css">&#125;</span><br><span class="language-css"> <span class="hljs-selector-tag">html</span>, <span class="hljs-selector-tag">body</span>&#123;</span><br><span class="language-css"><span class="hljs-attribute">width</span>: <span class="hljs-number">100%</span>;</span><br><span class="language-css"> <span class="hljs-attribute">height</span>: <span class="hljs-number">100%</span>;</span><br><span class="language-css">&#125;</span><br><span class="language-css">        </span><br><span class="language-css"><span class="hljs-selector-class">.wrap</span> &#123;</span><br><span class="language-css">    <span class="hljs-attribute">height</span>: <span class="hljs-number">100%</span>;</span><br><span class="language-css">    <span class="hljs-attribute">position</span>: relative;</span><br><span class="language-css">    <span class="hljs-attribute">padding-top</span>: <span class="hljs-number">0px</span>;</span><br><span class="language-css">    <span class="hljs-attribute">padding-bottom</span>: <span class="hljs-number">10px</span>;</span><br><span class="language-css">    <span class="hljs-attribute">box-sizing</span>: border-box;</span><br><span class="language-css">&#125;</span><br><span class="language-css"><span class="hljs-selector-class">.right</span> &#123;</span><br><span class="language-css">    <span class="hljs-attribute">height</span>: <span class="hljs-number">100%</span>;</span><br><span class="language-css">    <span class="hljs-attribute">overflow</span>: hidden;</span><br><span class="language-css">    <span class="hljs-attribute">overflow-y</span>: auto;</span><br><span class="language-css">&#125;</span><br><span class="language-css"></span><span class="hljs-tag">&lt;/<span class="hljs-name">style</span>&gt;</span><br><br><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;container wrap&quot;</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;tab-content onLeft &quot;</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">label</span> <span class="hljs-attr">for</span>=<span class="hljs-string">&quot;key&quot;</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;col-sm-3 control-label&quot;</span> <span class="hljs-attr">style</span>=<span class="hljs-string">&quot;top:25px&quot;</span>&gt;</span>搜索:<span class="hljs-tag">&lt;/<span class="hljs-name">label</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;inquiry&quot;</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;text&quot;</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;key&quot;</span> <span class="hljs-attr">value</span>=<span class="hljs-string">&quot;&quot;</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;&quot;</span> /&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">img</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;./skin/meteringTS/custom/images/u975.png&quot;</span>/&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">ul</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;treeDemo&quot;</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;ztree&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">ul</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;rMenu&quot;</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">ul</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">li</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;m_add&quot;</span> <span class="hljs-attr">onclick</span>=<span class="hljs-string">&quot;addTreeNode();&quot;</span>&gt;</span>添加<span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">li</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;m_mov_up&quot;</span> <span class="hljs-attr">onclick</span>=<span class="hljs-string">&quot;moveNode(1);&quot;</span>&gt;</span>上移<span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">li</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;m_mov_down&quot;</span> <span class="hljs-attr">onclick</span>=<span class="hljs-string">&quot;moveNode(0);&quot;</span>&gt;</span>下移<span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">li</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;m_del&quot;</span> <span class="hljs-attr">onclick</span>=<span class="hljs-string">&quot;removeTreeNode();&quot;</span>&gt;</span>删除<span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">li</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;m_rename&quot;</span> <span class="hljs-attr">onclick</span>=<span class="hljs-string">&quot;renameEditOpen();&quot;</span>&gt;</span>重命名<span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">ul</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><span class="hljs-comment">&lt;!-- 子页面 --&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;right&quot;</span> <span class="hljs-attr">style</span>=<span class="hljs-string">&quot;border:1px solid #6EC5B9;&quot;</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">iframe</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;iframeShow&quot;</span> <span class="hljs-attr">frameborder</span>=<span class="hljs-string">&quot;0&quot;</span> <span class="hljs-attr">style</span>=<span class="hljs-string">&quot;display: block;&quot;</span> <span class="hljs-attr">width</span>=<span class="hljs-string">&quot;100%&quot;</span> <span class="hljs-attr">height</span>=<span class="hljs-string">&#x27;90%&#x27;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">iframe</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><br><span class="hljs-comment">&lt;!-- 模态弹框 --&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;op_div&quot;</span> <span class="hljs-attr">style</span>=<span class="hljs-string">&quot;display:none;&quot;</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">iframe</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&#x27;op_iframe&#x27;</span> <span class="hljs-attr">frameborder</span>=<span class="hljs-string">&#x27;0&#x27;</span> <span class="hljs-attr">scrolling</span>=<span class="hljs-string">&#x27;auto&#x27;</span> <span class="hljs-attr">width</span>=<span class="hljs-string">&#x27;100%&#x27;</span> <span class="hljs-attr">height</span>=<span class="hljs-string">&#x27;100%&#x27;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">iframe</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><span class="hljs-comment">&lt;!-- end container --&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">body</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">html</span>&gt;</span><br></code></pre></td></tr></table></figure><h3 id="js代码"><a href="#js代码" class="headerlink" title="js代码"></a>js代码</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br></pre></td><td class="code"><pre><code class="hljs javascript">&lt;script type=<span class="hljs-string">&quot;text/javascript&quot;</span>&gt;<br>$(<span class="hljs-keyword">function</span>(<span class="hljs-params"></span>)&#123;<br><span class="hljs-comment">//初始化岗位树</span><br><span class="hljs-title function_">initTree</span>();<br><span class="hljs-title function_">iframeShow</span>(<span class="hljs-string">&quot;&quot;</span>);<br><span class="hljs-comment">//树型图搜索框事件绑定</span><br><span class="hljs-keyword">var</span> key = $(<span class="hljs-string">&quot;#key&quot;</span>);<br>key.<span class="hljs-title function_">bind</span>(<span class="hljs-string">&quot;propertychange&quot;</span>, searchNode)<br>.<span class="hljs-title function_">bind</span>(<span class="hljs-string">&quot;input&quot;</span>, searchNode);<br>&#125;)<br><br><span class="hljs-comment">//选中单选框并展示该项详细数据</span><br><span class="hljs-keyword">function</span> <span class="hljs-title function_">iframeShow</span>(<span class="hljs-params">jobId</span>)&#123;<br>$(<span class="hljs-string">&quot;#iframeShow&quot;</span>).<span class="hljs-title function_">attr</span>(<span class="hljs-string">&quot;src&quot;</span>,<span class="hljs-string">&quot;&lt;%=basePath%&gt;relaJobStandardWeb/listPage.so?jobId=&quot;</span> + jobId);<br>&#125;<br><br><br><span class="hljs-comment">//ztree 设置</span><br><span class="hljs-keyword">var</span> setting = &#123;<br>        <span class="hljs-attr">view</span>: &#123;<br>            <span class="hljs-attr">showIcon</span>: <span class="hljs-literal">false</span>,<br><span class="hljs-attr">dblClickExpand</span>: <span class="hljs-literal">false</span><br>        &#125;,<br>        <span class="hljs-attr">data</span>: &#123;<br>            <span class="hljs-attr">simpleData</span>: &#123;<br>                <span class="hljs-attr">enable</span>: <span class="hljs-literal">true</span>,<br>                <span class="hljs-attr">idKey</span>: <span class="hljs-string">&quot;id&quot;</span>, <br>                <span class="hljs-attr">pIdKey</span>: <span class="hljs-string">&quot;pid&quot;</span>,<br>                <span class="hljs-attr">rootPId</span>: <span class="hljs-number">0</span><br>            &#125;<br>        &#125;,<br><span class="hljs-attr">callback</span>: &#123;<br><span class="hljs-attr">onClick</span>: onClick,<br><span class="hljs-attr">onRightClick</span>: <span class="hljs-title class_">OnRightClick</span>,<br><span class="hljs-attr">onRename</span>: onRename<br>&#125;,<br><span class="hljs-attr">view</span>: &#123;<br><span class="hljs-attr">fontCss</span>: getFontCss,<br><span class="hljs-attr">showIcon</span>: <span class="hljs-literal">false</span><br>&#125;<br>,<span class="hljs-attr">edit</span>: &#123;<br><span class="hljs-attr">enable</span>: <span class="hljs-literal">true</span>,<br><span class="hljs-attr">showRenameBtn</span>: <span class="hljs-literal">false</span>,<br><span class="hljs-attr">showRemoveBtn</span>: <span class="hljs-literal">false</span>,<br><span class="hljs-attr">editNameSelectAll</span>: <span class="hljs-literal">true</span>,<br><span class="hljs-attr">drag</span>: &#123;<br><span class="hljs-attr">isCopy</span>: <span class="hljs-literal">false</span>,<br><span class="hljs-attr">isMove</span>: <span class="hljs-literal">false</span><br>&#125;<br>&#125;<br>    &#125;;<br><br><span class="hljs-comment">//字体样式</span><br><span class="hljs-keyword">function</span> <span class="hljs-title function_">getFontCss</span>(<span class="hljs-params">treeId, treeNode</span>) &#123;<br><span class="hljs-keyword">return</span> (!!treeNode.<span class="hljs-property">highlight</span>) ? &#123;<span class="hljs-attr">color</span>:<span class="hljs-string">&quot;#A60000&quot;</span>, <span class="hljs-string">&quot;font-weight&quot;</span>:<span class="hljs-string">&quot;bold&quot;</span>, <span class="hljs-string">&quot;font-size&quot;</span>:<span class="hljs-string">&quot;18px&quot;</span>&#125; : &#123;<span class="hljs-attr">color</span>:<span class="hljs-string">&quot;#333&quot;</span>, <span class="hljs-string">&quot;font-weight&quot;</span>:<span class="hljs-string">&quot;normal&quot;</span>, <span class="hljs-string">&quot;font-size&quot;</span>:<span class="hljs-string">&quot;18px&quot;</span>&#125;;<br>&#125;<br><br><span class="hljs-keyword">function</span> <span class="hljs-title function_">initTree</span>(<span class="hljs-params"></span>)&#123;<br> $.<span class="hljs-title function_">ajax</span>(&#123;<br><span class="hljs-attr">url</span>: <span class="hljs-string">&#x27;&lt;%=basePath%&gt;jobIdentificationWeb/queryList.so&#x27;</span>,<br><span class="hljs-attr">type</span>:<span class="hljs-string">&quot;POST&quot;</span>, <br><span class="hljs-attr">async</span>:<span class="hljs-literal">false</span><span class="hljs-comment">/*是否异步*/</span>,<br><span class="hljs-attr">data</span>:&#123;&#125;,<br><span class="hljs-attr">dataType</span>: <span class="hljs-string">&quot;json&quot;</span><br>&#125;).<span class="hljs-title function_">done</span>(<span class="hljs-keyword">function</span>(<span class="hljs-params">data</span>)&#123;<br><span class="hljs-keyword">if</span>(data)&#123;<br>$.fn.<span class="hljs-property">zTree</span>.<span class="hljs-title function_">init</span>($(<span class="hljs-string">&quot;#treeDemo&quot;</span>), setting, data);<br><span class="hljs-keyword">var</span> zTree = $.fn.<span class="hljs-property">zTree</span>.<span class="hljs-title function_">getZTreeObj</span>(<span class="hljs-string">&quot;treeDemo&quot;</span>);<br>zTree.<span class="hljs-title function_">expandAll</span>(<span class="hljs-literal">true</span>);<br>&#125;<br>&#125;).<span class="hljs-title function_">fail</span>(<span class="hljs-keyword">function</span>(<span class="hljs-params">data</span>)&#123;<br><span class="hljs-title function_">dialog</span>(<span class="hljs-string">&quot;列表获取失败!&quot;</span>);<br>&#125;);<br>&#125;<br><br><span class="hljs-comment">//右键菜单</span><br><span class="hljs-keyword">function</span> <span class="hljs-title function_">OnRightClick</span>(<span class="hljs-params">event, treeId, treeNode</span>) &#123;<br><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(treeNode);<br><span class="hljs-keyword">var</span> zTree = $.fn.<span class="hljs-property">zTree</span>.<span class="hljs-title function_">getZTreeObj</span>(<span class="hljs-string">&quot;treeDemo&quot;</span>);<br>zTree.<span class="hljs-title function_">selectNode</span>(treeNode);<br><span class="hljs-title function_">showRMenu</span>(event, treeNode, <span class="hljs-variable language_">window</span>.<span class="hljs-property">event</span>.<span class="hljs-property">clientX</span>, <span class="hljs-variable language_">window</span>.<span class="hljs-property">event</span>.<span class="hljs-property">clientY</span>);<br>&#125;<br><br><span class="hljs-comment">//右键菜单显示</span><br><span class="hljs-keyword">var</span> rMenu = $(<span class="hljs-string">&quot;#rMenu&quot;</span>);<br><span class="hljs-keyword">function</span> <span class="hljs-title function_">showRMenu</span>(<span class="hljs-params">event, treeNode, x, y</span>) &#123;<br>$(<span class="hljs-string">&quot;#rMenu ul&quot;</span>).<span class="hljs-title function_">show</span>();<br>$(<span class="hljs-string">&quot;#m_del&quot;</span>).<span class="hljs-title function_">show</span>();<br>$(<span class="hljs-string">&quot;#m_mov_up&quot;</span>).<span class="hljs-title function_">show</span>();<br>$(<span class="hljs-string">&quot;#m_mov_down&quot;</span>).<span class="hljs-title function_">show</span>();<br>$(<span class="hljs-string">&quot;#m_add&quot;</span>).<span class="hljs-title function_">show</span>();<br><span class="hljs-keyword">if</span> (treeNode.<span class="hljs-property">level</span>==<span class="hljs-number">0</span>) &#123;<br>$(<span class="hljs-string">&quot;#m_del&quot;</span>).<span class="hljs-title function_">hide</span>();<br>$(<span class="hljs-string">&quot;#m_mov_up&quot;</span>).<span class="hljs-title function_">hide</span>();<br>$(<span class="hljs-string">&quot;#m_mov_down&quot;</span>).<span class="hljs-title function_">hide</span>();<br>&#125; <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (treeNode.<span class="hljs-property">level</span>==<span class="hljs-number">1</span>) &#123;<br>&#125; <span class="hljs-keyword">else</span>&#123;<br>$(<span class="hljs-string">&quot;#m_add&quot;</span>).<span class="hljs-title function_">hide</span>();<br>&#125;<br>    y=event.<span class="hljs-property">target</span>.<span class="hljs-property">offsetTop</span>;<br><span class="hljs-comment">//x=event.target.offsetWidth;</span><br>    rMenu.<span class="hljs-title function_">css</span>(&#123;<span class="hljs-string">&quot;top&quot;</span>:y+<span class="hljs-string">&quot;px&quot;</span>, <span class="hljs-string">&quot;left&quot;</span>:x+<span class="hljs-string">&quot;px&quot;</span>, <span class="hljs-string">&quot;visibility&quot;</span>:<span class="hljs-string">&quot;visible&quot;</span>&#125;);<br><br>$(<span class="hljs-string">&quot;body&quot;</span>).<span class="hljs-title function_">bind</span>(<span class="hljs-string">&quot;mousedown&quot;</span>, onBodyMouseDown);<br>&#125;<br><span class="hljs-keyword">function</span> <span class="hljs-title function_">hideRMenu</span>(<span class="hljs-params"></span>) &#123;<br><span class="hljs-keyword">if</span> (rMenu) rMenu.<span class="hljs-title function_">css</span>(&#123;<span class="hljs-string">&quot;visibility&quot;</span>: <span class="hljs-string">&quot;hidden&quot;</span>&#125;);<br>$(<span class="hljs-string">&quot;body&quot;</span>).<span class="hljs-title function_">unbind</span>(<span class="hljs-string">&quot;mousedown&quot;</span>, onBodyMouseDown);<br>&#125;<br><span class="hljs-keyword">function</span> <span class="hljs-title function_">onBodyMouseDown</span>(<span class="hljs-params">event</span>)&#123;<br><span class="hljs-keyword">if</span> (!(event.<span class="hljs-property">target</span>.<span class="hljs-property">id</span> == <span class="hljs-string">&quot;rMenu&quot;</span> || $(event.<span class="hljs-property">target</span>).<span class="hljs-title function_">parents</span>(<span class="hljs-string">&quot;#rMenu&quot;</span>).<span class="hljs-property">length</span>&gt;<span class="hljs-number">0</span>)) &#123;<br>rMenu.<span class="hljs-title function_">css</span>(&#123;<span class="hljs-string">&quot;visibility&quot;</span> : <span class="hljs-string">&quot;hidden&quot;</span>&#125;);<br>&#125;<br>&#125;<br><br><span class="hljs-comment">//右键新增节点</span><br><span class="hljs-keyword">var</span> addCount = <span class="hljs-number">1</span>;<br><span class="hljs-keyword">function</span> <span class="hljs-title function_">addTreeNode</span>(<span class="hljs-params"></span>) &#123;<br><span class="hljs-keyword">var</span> zTree = $.fn.<span class="hljs-property">zTree</span>.<span class="hljs-title function_">getZTreeObj</span>(<span class="hljs-string">&quot;treeDemo&quot;</span>);<br><span class="hljs-title function_">hideRMenu</span>();<br><span class="hljs-keyword">var</span> newNode = &#123; <span class="hljs-attr">name</span>:<span class="hljs-string">&quot;新增&quot;</span> + (addCount++)&#125;;<br><span class="hljs-keyword">var</span> parentNode = zTree.<span class="hljs-title function_">getSelectedNodes</span>()[<span class="hljs-number">0</span>];<br><span class="hljs-keyword">if</span> (parentNode) &#123;<br>$.<span class="hljs-title function_">ajax</span>(&#123;<br><span class="hljs-attr">url</span>: <span class="hljs-string">&#x27;&lt;%=basePath%&gt;jobIdentificationWeb/addOrEdit.so&#x27;</span>,<br><span class="hljs-attr">type</span>:<span class="hljs-string">&quot;POST&quot;</span>, <br><span class="hljs-attr">async</span>:<span class="hljs-literal">false</span><span class="hljs-comment">/*是否异步*/</span>,<br><span class="hljs-attr">data</span>:&#123;<span class="hljs-attr">jobName</span>: newNode.<span class="hljs-property">name</span>, <span class="hljs-attr">parentId</span>: parentNode.<span class="hljs-property">id</span>&#125;,<br><span class="hljs-attr">dataType</span>: <span class="hljs-string">&quot;json&quot;</span><br>&#125;).<span class="hljs-title function_">done</span>(<span class="hljs-keyword">function</span>(<span class="hljs-params">data</span>)&#123;<br><span class="hljs-keyword">if</span>(data.<span class="hljs-property">success</span>)&#123;<br>newNode.<span class="hljs-property">id</span> = data.<span class="hljs-property">data</span>.<span class="hljs-property">id</span>;<br>newNode.<span class="hljs-property">sid</span> = data.<span class="hljs-property">data</span>.<span class="hljs-property">sortId</span>;<br>zTree.<span class="hljs-title function_">addNodes</span>(parentNode, -<span class="hljs-number">1</span>, newNode);<br>zTree.<span class="hljs-title function_">editName</span>(zTree.<span class="hljs-title function_">getNodeByParam</span>(<span class="hljs-string">&quot;id&quot;</span>, newNode.<span class="hljs-property">id</span>, <span class="hljs-literal">null</span>));<br>&#125;<span class="hljs-keyword">else</span>&#123;<br><span class="hljs-title function_">dialog</span>(<span class="hljs-string">&quot;节点添加失败!&quot;</span>);<br>&#125;<br>&#125;).<span class="hljs-title function_">fail</span>(<span class="hljs-keyword">function</span>(<span class="hljs-params">data</span>)&#123;<br><span class="hljs-title function_">dialog</span>(<span class="hljs-string">&quot;节点添加失败!&quot;</span>);<br>&#125;);<br>&#125; <br><br>&#125;<br><br><span class="hljs-comment">//右键重命名</span><br><span class="hljs-keyword">function</span> <span class="hljs-title function_">renameEditOpen</span>(<span class="hljs-params"></span>) &#123;<br><span class="hljs-keyword">var</span> zTree = $.fn.<span class="hljs-property">zTree</span>.<span class="hljs-title function_">getZTreeObj</span>(<span class="hljs-string">&quot;treeDemo&quot;</span>);<br><span class="hljs-title function_">hideRMenu</span>();<br><span class="hljs-keyword">var</span> node = zTree.<span class="hljs-title function_">getSelectedNodes</span>()[<span class="hljs-number">0</span>];<br>zTree.<span class="hljs-title function_">editName</span>(node);<br>&#125;<br><br><span class="hljs-comment">//右键重命名回调</span><br><span class="hljs-keyword">function</span> <span class="hljs-title function_">onRename</span>(<span class="hljs-params">event, treeId, treeNode, isCancel</span>) &#123;<br><span class="hljs-keyword">var</span> zTree = $.fn.<span class="hljs-property">zTree</span>.<span class="hljs-title function_">getZTreeObj</span>(<span class="hljs-string">&quot;treeDemo&quot;</span>);<br><span class="hljs-keyword">if</span> (treeNode &amp;&amp; treeNode.<span class="hljs-property">name</span> != <span class="hljs-string">&#x27;&#x27;</span>) &#123;<br><span class="hljs-keyword">if</span>(treeNode.<span class="hljs-property">id</span>!=<span class="hljs-literal">null</span>)&#123;<br>$.<span class="hljs-title function_">ajax</span>(&#123;<br><span class="hljs-attr">url</span>: <span class="hljs-string">&#x27;&lt;%=basePath%&gt;jobIdentificationWeb/addOrEdit.so&#x27;</span>,<br><span class="hljs-attr">type</span>:<span class="hljs-string">&quot;POST&quot;</span>, <br><span class="hljs-attr">async</span>:<span class="hljs-literal">false</span><span class="hljs-comment">/*是否异步*/</span>,<br><span class="hljs-attr">data</span>:&#123;<span class="hljs-attr">jobName</span>: treeNode.<span class="hljs-property">name</span>, <span class="hljs-attr">id</span>: treeNode.<span class="hljs-property">id</span>, <span class="hljs-attr">parentId</span>: treeNode.<span class="hljs-property">pid</span>, <span class="hljs-attr">sortId</span>: treeNode.<span class="hljs-property">sid</span>&#125;,<br><span class="hljs-attr">dataType</span>: <span class="hljs-string">&quot;json&quot;</span><br>&#125;).<span class="hljs-title function_">done</span>(<span class="hljs-keyword">function</span>(<span class="hljs-params">data</span>)&#123;<br><span class="hljs-keyword">if</span>(!data.<span class="hljs-property">success</span>)<br><span class="hljs-title function_">dialog</span>(<span class="hljs-string">&quot;节点重命名失败!&quot;</span>);<br>&#125;).<span class="hljs-title function_">fail</span>(<span class="hljs-keyword">function</span>(<span class="hljs-params">data</span>)&#123;<br><span class="hljs-title function_">dialog</span>(<span class="hljs-string">&quot;节点重命名失败!&quot;</span>);<br>&#125;);<br>&#125;<span class="hljs-keyword">else</span>&#123;<br><span class="hljs-title function_">dialog</span>(<span class="hljs-string">&quot;节点获取失败，稍后尝试!&quot;</span>);<br>&#125;<br>&#125; <br><br>&#125;<br><br><span class="hljs-comment">//右键删除节点</span><br><span class="hljs-keyword">function</span> <span class="hljs-title function_">removeTreeNode</span>(<span class="hljs-params"></span>) &#123;<br><span class="hljs-keyword">var</span> zTree = $.fn.<span class="hljs-property">zTree</span>.<span class="hljs-title function_">getZTreeObj</span>(<span class="hljs-string">&quot;treeDemo&quot;</span>);<br><span class="hljs-title function_">hideRMenu</span>();<br><span class="hljs-keyword">var</span> nodes = zTree.<span class="hljs-title function_">getSelectedNodes</span>();<br><span class="hljs-keyword">var</span> rowlist = [];<br><span class="hljs-keyword">if</span> (nodes &amp;&amp; nodes.<span class="hljs-property">length</span>&gt;<span class="hljs-number">0</span>) &#123;<br><span class="hljs-keyword">if</span> (nodes[<span class="hljs-number">0</span>].<span class="hljs-property">children</span> &amp;&amp; nodes[<span class="hljs-number">0</span>].<span class="hljs-property">children</span>.<span class="hljs-property">length</span> &gt; <span class="hljs-number">0</span>) &#123;<br><span class="hljs-keyword">var</span> msg = <span class="hljs-string">&quot;要删除的节点是父节点，如果删除将连同子节点一起删掉。\n\n请确认！&quot;</span>;<br><span class="hljs-keyword">if</span> (<span class="hljs-title function_">confirm</span>(msg)==<span class="hljs-literal">true</span>)&#123;<br>rowlist.<span class="hljs-title function_">push</span>(nodes[<span class="hljs-number">0</span>].<span class="hljs-property">id</span>);<br>$.<span class="hljs-title function_">each</span>(nodes[<span class="hljs-number">0</span>].<span class="hljs-property">children</span>, <span class="hljs-keyword">function</span>(<span class="hljs-params">index, node</span>)&#123;<br>rowlist.<span class="hljs-title function_">push</span>(node.<span class="hljs-property">id</span>);<br>&#125;);<br>&#125;<br>&#125; <span class="hljs-keyword">else</span> &#123;<br>rowlist.<span class="hljs-title function_">push</span>(nodes[<span class="hljs-number">0</span>].<span class="hljs-property">id</span>);<br><br>&#125;<br>$.<span class="hljs-title function_">ajax</span>(&#123;<br><span class="hljs-attr">url</span>: <span class="hljs-string">&#x27;&lt;%=basePath%&gt;jobIdentificationWeb/delByIds.so&#x27;</span>,<br><span class="hljs-attr">type</span>:<span class="hljs-string">&quot;POST&quot;</span>, <br><span class="hljs-attr">async</span>:<span class="hljs-literal">false</span><span class="hljs-comment">/*是否异步*/</span>,<br><span class="hljs-attr">data</span>:<span class="hljs-string">&quot;rowList=&quot;</span>+rowlist,<br><span class="hljs-attr">dataType</span>: <span class="hljs-string">&quot;json&quot;</span><br>&#125;).<span class="hljs-title function_">done</span>(<span class="hljs-keyword">function</span>(<span class="hljs-params">data</span>)&#123;<br><span class="hljs-keyword">if</span>(data.<span class="hljs-property">success</span>)<br>zTree.<span class="hljs-title function_">removeNode</span>(nodes[<span class="hljs-number">0</span>]);<br><span class="hljs-keyword">else</span><br><span class="hljs-title function_">dialog</span>(data.<span class="hljs-property">message</span>);<br>&#125;).<span class="hljs-title function_">fail</span>(<span class="hljs-keyword">function</span>(<span class="hljs-params">data</span>)&#123;<br><span class="hljs-title function_">dialog</span>(<span class="hljs-string">&quot;节点删除失败!&quot;</span>);<br>&#125;);<br>&#125;<br>&#125;<br><br><span class="hljs-comment">//右键移动</span><br><span class="hljs-keyword">function</span> <span class="hljs-title function_">moveNode</span>(<span class="hljs-params">e</span>)&#123;<br><span class="hljs-keyword">var</span> zTree = $.fn.<span class="hljs-property">zTree</span>.<span class="hljs-title function_">getZTreeObj</span>(<span class="hljs-string">&quot;treeDemo&quot;</span>);<br><span class="hljs-keyword">var</span> nodes = zTree.<span class="hljs-title function_">getSelectedNodes</span>();<br><span class="hljs-title function_">hideRMenu</span>();<br><span class="hljs-keyword">if</span>(nodes.<span class="hljs-property">length</span>&gt;<span class="hljs-number">0</span>)&#123;<br><span class="hljs-keyword">var</span> node = nodes[<span class="hljs-number">0</span>];<br><span class="hljs-keyword">if</span>(e)&#123;<span class="hljs-comment">//上移</span><br><span class="hljs-keyword">var</span> preNode = node.<span class="hljs-title function_">getPreNode</span>();<br><span class="hljs-title function_">changeNode</span>(preNode, node, <span class="hljs-string">&quot;prev&quot;</span>);<br>&#125;<span class="hljs-keyword">else</span>&#123;<span class="hljs-comment">//下移</span><br><span class="hljs-keyword">var</span> nextNode = node.<span class="hljs-title function_">getNextNode</span>();<br><span class="hljs-title function_">changeNode</span>(nextNode, node, <span class="hljs-string">&quot;next&quot;</span>);<br>&#125;<br>&#125;<br>&#125;<br><br><span class="hljs-comment">//交互两节点的 sid 即顺序</span><br><span class="hljs-keyword">function</span> <span class="hljs-title function_">changeNode</span>(<span class="hljs-params">targetNode, treeNode, moveType</span>)&#123;<br><span class="hljs-keyword">var</span> zTree = $.fn.<span class="hljs-property">zTree</span>.<span class="hljs-title function_">getZTreeObj</span>(<span class="hljs-string">&quot;treeDemo&quot;</span>);<br><span class="hljs-keyword">if</span>(targetNode &amp;&amp; treeNode &amp;&amp; targetNode.<span class="hljs-property">id</span> &amp;&amp; treeNode.<span class="hljs-property">id</span> &amp;&amp; targetNode.<span class="hljs-property">sid</span> &amp;&amp; treeNode.<span class="hljs-property">sid</span>)&#123;<br>$.<span class="hljs-title function_">ajax</span>(&#123;<br><span class="hljs-attr">url</span>: <span class="hljs-string">&#x27;&lt;%=basePath%&gt;jobIdentificationWeb/addOrEdit.so&#x27;</span>,<br><span class="hljs-attr">type</span>:<span class="hljs-string">&quot;POST&quot;</span>, <br><span class="hljs-attr">async</span>:<span class="hljs-literal">false</span><span class="hljs-comment">/*是否异步*/</span>,<br><span class="hljs-attr">data</span>:&#123;<span class="hljs-attr">jobName</span>: treeNode.<span class="hljs-property">name</span>, <span class="hljs-attr">parentId</span>: treeNode.<span class="hljs-property">pid</span>, <span class="hljs-attr">id</span>: treeNode.<span class="hljs-property">id</span>, <span class="hljs-attr">sortId</span>: targetNode.<span class="hljs-property">sid</span>&#125;,<br><span class="hljs-attr">dataType</span>: <span class="hljs-string">&quot;json&quot;</span><br>&#125;).<span class="hljs-title function_">done</span>(<span class="hljs-keyword">function</span>(<span class="hljs-params">data</span>)&#123;<br><span class="hljs-keyword">var</span> _treeNode_sid=treeNode.<span class="hljs-property">sid</span>;<br><span class="hljs-keyword">if</span>(data.<span class="hljs-property">success</span>)&#123;<br>treeNode.<span class="hljs-property">sid</span>=targetNode.<span class="hljs-property">sid</span>;<br>$.<span class="hljs-title function_">ajax</span>(&#123;<br><span class="hljs-attr">url</span>: <span class="hljs-string">&#x27;&lt;%=basePath%&gt;jobIdentificationWeb/addOrEdit.so&#x27;</span>,<br><span class="hljs-attr">type</span>:<span class="hljs-string">&quot;POST&quot;</span>, <br><span class="hljs-attr">async</span>:<span class="hljs-literal">false</span><span class="hljs-comment">/*是否异步*/</span>,<br><span class="hljs-attr">data</span>:&#123;<span class="hljs-attr">jobName</span>: targetNode.<span class="hljs-property">name</span>, <span class="hljs-attr">parentId</span>: targetNode.<span class="hljs-property">pid</span>, <span class="hljs-attr">id</span>: targetNode.<span class="hljs-property">id</span>, <span class="hljs-attr">sortId</span>: _treeNode_sid&#125;,<br><span class="hljs-attr">dataType</span>: <span class="hljs-string">&quot;json&quot;</span><br>&#125;).<span class="hljs-title function_">done</span>(<span class="hljs-keyword">function</span>(<span class="hljs-params">data</span>)&#123;<br><span class="hljs-keyword">if</span>(data.<span class="hljs-property">success</span>)&#123;<br>targetNode.<span class="hljs-property">sid</span>=_treeNode_sid;<br>zTree.<span class="hljs-title function_">moveNode</span>(targetNode, treeNode, moveType);<br>&#125;<span class="hljs-keyword">else</span>&#123;<br><span class="hljs-title function_">dialog</span>(<span class="hljs-string">&quot;节点移动失败!&quot;</span>);<br>&#125;<br>&#125;).<span class="hljs-title function_">fail</span>(<span class="hljs-keyword">function</span>(<span class="hljs-params">data</span>)&#123;<br><span class="hljs-title function_">dialog</span>(<span class="hljs-string">&quot;节点移动失败!&quot;</span>);<br>&#125;);<br>&#125;<span class="hljs-keyword">else</span>&#123;<br><span class="hljs-title function_">dialog</span>(<span class="hljs-string">&quot;节点移动失败!&quot;</span>);<br>&#125;<br>&#125;).<span class="hljs-title function_">fail</span>(<span class="hljs-keyword">function</span>(<span class="hljs-params">data</span>)&#123;<br><span class="hljs-title function_">dialog</span>(<span class="hljs-string">&quot;节点移动失败!&quot;</span>);<br>&#125;);<br>&#125;<br>&#125;<br><br><span class="hljs-comment">//节点单节回调</span><br><span class="hljs-keyword">function</span> <span class="hljs-title function_">onClick</span>(<span class="hljs-params">e,treeId, treeNode</span>) &#123;<br><span class="hljs-keyword">var</span> zTree = $.fn.<span class="hljs-property">zTree</span>.<span class="hljs-title function_">getZTreeObj</span>(<span class="hljs-string">&quot;treeDemo&quot;</span>);<br><span class="hljs-keyword">if</span>(treeNode.<span class="hljs-property">level</span> == <span class="hljs-number">2</span>)&#123;<br><span class="hljs-title function_">iframeShow</span>(treeNode.<span class="hljs-property">id</span>);<br>&#125;<span class="hljs-keyword">else</span>&#123;<br>zTree.<span class="hljs-title function_">expandNode</span>(treeNode);<br>&#125;<br>&#125;<br><br><span class="hljs-keyword">var</span> lastValue = <span class="hljs-string">&quot;&quot;</span>, nodeList = [];<br><br><span class="hljs-keyword">function</span> <span class="hljs-title function_">searchNode</span>(<span class="hljs-params">e</span>) &#123;<br><span class="hljs-keyword">var</span> zTree = $.fn.<span class="hljs-property">zTree</span>.<span class="hljs-title function_">getZTreeObj</span>(<span class="hljs-string">&quot;treeDemo&quot;</span>);<br><span class="hljs-keyword">var</span> value = $.<span class="hljs-title function_">trim</span>(key.<span class="hljs-property">value</span>);<br><span class="hljs-keyword">if</span> (lastValue === value) <span class="hljs-keyword">return</span>;<br>lastValue = value;<br><span class="hljs-title function_">ztreeFilter</span>(zTree,value);  <br>&#125;<br><br><span class="hljs-comment">//搜索框实现</span><br><span class="hljs-keyword">function</span> <span class="hljs-title function_">ztreeFilter</span>(<span class="hljs-params">zTreeObj,_keywords,callBackFunc</span>) &#123;<br><span class="hljs-keyword">var</span> nameKey = zTreeObj.<span class="hljs-property">setting</span>.<span class="hljs-property">data</span>.<span class="hljs-property">key</span>.<span class="hljs-property">name</span>; <br>    <span class="hljs-keyword">function</span> <span class="hljs-title function_">filterFunc</span>(<span class="hljs-params">node</span>) &#123;<br> <span class="hljs-keyword">if</span>(node &amp;&amp; node.<span class="hljs-property">oldname</span> &amp;&amp; node.<span class="hljs-property">oldname</span>.<span class="hljs-property">length</span>&gt;<span class="hljs-number">0</span>)&#123;<br>            node[nameKey] = node.<span class="hljs-property">oldname</span>;<br>        &#125;<br>        zTreeObj.<span class="hljs-title function_">updateNode</span>(node);<br>        <span class="hljs-keyword">if</span> (_keywords.<span class="hljs-property">length</span> == <span class="hljs-number">0</span>) &#123; <br>            zTreeObj.<span class="hljs-title function_">showNode</span>(node);<br>            zTreeObj.<span class="hljs-title function_">expandNode</span>(node, <span class="hljs-literal">true</span>);<br>            <span class="hljs-keyword">return</span> <span class="hljs-literal">true</span>;<br>        &#125;<br>        <span class="hljs-keyword">if</span> (node[nameKey] &amp;&amp; node[nameKey].<span class="hljs-title function_">toLowerCase</span>().<span class="hljs-title function_">indexOf</span>(_keywords.<span class="hljs-title function_">toLowerCase</span>())!=-<span class="hljs-number">1</span>) &#123;<br>            node.<span class="hljs-property">highLight</span> = <span class="hljs-literal">true</span>;<br>        zTreeObj.<span class="hljs-title function_">updateNode</span>(node);<br>            zTreeObj.<span class="hljs-title function_">showNode</span>(node);<br>            <span class="hljs-keyword">return</span> <span class="hljs-literal">true</span>; <br>        &#125;<br>        zTreeObj.<span class="hljs-title function_">hideNode</span>(node);<br>        <span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>;<br>    &#125;<br>    <span class="hljs-keyword">var</span> nodesShow = zTreeObj.<span class="hljs-title function_">getNodesByFilter</span>(filterFunc, <span class="hljs-literal">false</span>, zTreeObj.<span class="hljs-title function_">getNodeByParam</span>(<span class="hljs-string">&quot;id&quot;</span>, <span class="hljs-number">0</span>));<br>    <span class="hljs-title function_">processShowNodes</span>(zTreeObj, nodesShow, _keywords);<span class="hljs-comment">//对获取的节点进行二次处理</span><br>&#125;<br><br><span class="hljs-comment">//对符合条件的节点做二次处理</span><br><span class="hljs-keyword">function</span> <span class="hljs-title function_">processShowNodes</span>(<span class="hljs-params">zTreeObj,nodesShow,_keywords</span>)&#123;<br>    <span class="hljs-keyword">if</span>(nodesShow &amp;&amp; nodesShow.<span class="hljs-property">length</span>&gt;<span class="hljs-number">0</span>)&#123;<br>        <span class="hljs-keyword">if</span>(_keywords.<span class="hljs-property">length</span>&gt;<span class="hljs-number">0</span>)&#123; <br>            $.<span class="hljs-title function_">each</span>(nodesShow, <span class="hljs-keyword">function</span>(<span class="hljs-params">n,obj</span>)&#123;<br>                <span class="hljs-keyword">var</span> pathOfOne = obj.<span class="hljs-title function_">getPath</span>();<span class="hljs-comment">//向上追溯,获取节点的所有祖先节点(包括自己)</span><br>                <span class="hljs-keyword">if</span>(pathOfOne &amp;&amp; pathOfOne.<span class="hljs-property">length</span>&gt;<span class="hljs-number">0</span>)&#123; <span class="hljs-comment">//对path中的每个节点进行操作</span><br>                    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">var</span> i=<span class="hljs-number">0</span>;i&lt;pathOfOne.<span class="hljs-property">length</span>-<span class="hljs-number">1</span>;i++)&#123;<br>                        zTreeObj.<span class="hljs-title function_">showNode</span>(pathOfOne[i]); <span class="hljs-comment">//显示节点</span><br>                        zTreeObj.<span class="hljs-title function_">expandNode</span>(pathOfOne[i],<span class="hljs-literal">true</span>); <span class="hljs-comment">//展开节点</span><br>                    &#125;<br>                &#125;<br>            &#125;);             <br>        &#125;<span class="hljs-keyword">else</span>&#123; <br>            <span class="hljs-keyword">var</span> rootNodes = zTreeObj.<span class="hljs-title function_">getNodesByParam</span>(<span class="hljs-string">&#x27;level&#x27;</span>,<span class="hljs-string">&#x27;0&#x27;</span>);<br>            $.<span class="hljs-title function_">each</span>(rootNodes,<span class="hljs-keyword">function</span>(<span class="hljs-params">n,obj</span>)&#123;<br>                zTreeObj.<span class="hljs-title function_">expandNode</span>(obj,<span class="hljs-literal">true</span>); <br>            &#125;);<br>        &#125;<br>    &#125;<br>&#125;<br><br>&lt;/script&gt;<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>zTree</category>
      
    </categories>
    
    
    <tags>
      
      <tag>zTree</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Shell 编程</title>
    <link href="/2019/10/10/shell/"/>
    <url>/2019/10/10/shell/</url>
    
    <content type="html"><![CDATA[<h1 id="shell-编程"><a href="#shell-编程" class="headerlink" title="shell 编程"></a>shell 编程</h1><h5 id="shell-脚本首行开头：-bin-bash-或-bin-sh"><a href="#shell-脚本首行开头：-bin-bash-或-bin-sh" class="headerlink" title="shell 脚本首行开头：#!&#x2F;bin&#x2F;bash 或 #!&#x2F;bin&#x2F;sh"></a>shell 脚本首行开头：#!&#x2F;bin&#x2F;bash 或 #!&#x2F;bin&#x2F;sh</h5><h5 id="为固定开头格式，后跟路径为解释器的路径，通常解释器选用-bash-解释器，sh-等价于-bash"><a href="#为固定开头格式，后跟路径为解释器的路径，通常解释器选用-bash-解释器，sh-等价于-bash" class="headerlink" title="#! 为固定开头格式，后跟路径为解释器的路径，通常解释器选用 bash 解释器，sh 等价于 bash"></a>#! 为固定开头格式，后跟路径为解释器的路径，通常解释器选用 bash 解释器，sh 等价于 bash</h5><h5 id="号为注释符号，可以单独一行，也可以放在一行的末尾"><a href="#号为注释符号，可以单独一行，也可以放在一行的末尾" class="headerlink" title="# 号为注释符号，可以单独一行，也可以放在一行的末尾"></a># 号为注释符号，可以单独一行，也可以放在一行的末尾</h5><p>man 命令是查询命令手册，后跟命令名称，查询指定命令的具体用法<br>命令行执行多个命令时，使用分号分隔，会依次执行多条命令</p><pre><code class="hljs">touch 文件名 ### 若文件不存在，则创建该文件，存在的话更新文件的更新时间等</code></pre><p>用户操作指令：</p><p>创建用户的同时会创建同名的用户组，组内只有该用户<br>用户信息保存在 etc 目录下的 passwd 文件中，&#x2F; etc &#x2F; passwd<br>用户密码保存在 etc 目录下的 shadow 文件中，&#x2F; etc &#x2F; shadow</p><pre><code class="hljs">useradd/adduser  “username” ；### 添加用户usermod -p123456 “username” ；### 修改用户密码，此处不会对密码进行加密存储，而是直接存储passwd “username” ；### 使用 passwd 命令修改用户密码，推荐使用此方法，密码将会以加密后的密文形式保存userdel  -r  “username” ；### 删除用户，-r 代表连 /home 目录下的用户根目录及其中文件一并删除</code></pre><p>用户组操作指令：</p><p>用户和用户组是多对多的关系，一个用户可以归属于多个组，一个组可以包含多个用户<br>用户组信息保存在 etc 目录下的 group 文件中， &#x2F;etc&#x2F;group</p><pre><code class="hljs">groupadd “groupname” ；### 添加用户组groupmod -n“new_name”  “old_name” ；### 重命名用户组groupdel “groupname” ；### 删除用户组</code></pre><p>cp （复制）：</p><p>可以复制文件或文件夹，</p><p>格式：cp 【选项】 源文件&#x2F;源路径  目标文件&#x2F;目标路径</p><p>参数选项：</p><ul><li>-r ：递归操作，复制所有子目录或子文件，复制文件夹时，不加 -r 会报错</li><li>-f ：文件重复时不提示交互操作，直接覆盖</li><li>-i ：与 -f 相反</li><li>-p ：复制时连同文件权限和创建时间等一同复制</li><li>-n ：文件重复时不再提示，直接跳过</li></ul><p>mv（移动）：</p><p>可以移动文件或文件夹，</p><p>格式：mv 【选项】 源文件&#x2F;源路径  目标文件&#x2F;目标路径</p><p>参数选项：</p><ul><li>-f ：文件重复时不提示交互操作，直接覆盖</li><li>-i ：与 -f 相反</li></ul><p>rm （删除）：</p><p>删除文件或文件夹</p><p>格式：rm 【选项】文件&#x2F;文件夹</p><p>参数选项：</p><ul><li>-r ：递归操作，删除所有子目录或子文件，删除文件夹时，不加 -r 会报错</li><li>-f ：文件重复时不提示交互操作，直接覆盖</li><li>-i ：与 -f 相反</li></ul><p>cp、mv、rm 三个命令默认的参数选项都是 -i，即默认进行交互式确认操作<br>可以一次操作多个文件，即源文件可以有多个，用空格隔开，最后一个参数为目标地址<br>多数操作命令都支持正则表达式，即可以对一组名称相近的文件批量操作</p><p>目录操作命令：</p><p>mkdir、rmdir、cd</p><p>mkdir 【选项】文件夹名</p><p>参数选项：</p><ul><li>-m ：赋予新建的文件夹权限，mkdir -m 777 testDir</li><li>-p ：递归创建文件夹树，一次可以创建多个文件夹</li><li>-v ：显示打印创建的过程</li></ul><p>rmdir 【选项】文件夹名</p><p>文件夹不为空，无法删除，使用 rm 命令</p><p>参数选项：</p><ul><li>-p ：递归删除文件夹树，一次可以删除多个文件夹，从目标文件夹开始，往上其父文件夹如果为空，也一并删除</li></ul><p>cd 文件夹名</p><pre><code class="hljs">cd ~ / cd ：回到登录目录cd - ：回到上一个操作的目录cd / ：回到根目录</code></pre><p>文件权限命令：</p><p>root 用户可以更改所有文件的权限和属主，其他用户只能更改属于自己的文件<br>chmod（修改文件权限）、chown（修改文件属主）</p><p>ll 查看文件的权限，读、写、执行，文件以 - 开头，目录以 d 开头，后跟三组权限值，分别是属主权限，属组权限、其他用户权限，r 读（4），w 写（2），x 执行（1）</p><p>chmod 两种格式：一种是字母加对应权限字母，u 代表属主，g 代表属组，o 代表其他用户，+ 代表增加权限，- 代表减少权限，&#x3D; 代表赋予权限，并取消之前的权限，即覆盖</p><pre><code class="hljs">chmod u+x,g+w,o+w 文件名</code></pre><p>第二种格式：数字代表权限</p><pre><code class="hljs">chmod 777 文件名 ### 赋予文件最高权限</code></pre><p>chown 【选项】要更改成的用户名 文件名</p><p>参数选项：</p><ul><li>-R ：递归操作，即变更文件夹下的所有子文件或子目录为指定的用户属主</li><li>-v ：显示执行操作信息</li></ul><p>变量替换：</p><pre><code class="hljs">&quot;hello world&quot; ###  定义一个变量，值为字符串${var1#*l} ### 删除变量中，指定字符首次出现位置之前所有的字符，包含该字符位置${var1##*l} ### 删除变量中，指定字符最后一次出现位置之前所有的字符，包含该字符位置${var1%l*} ### 删除变量中，指定字符从末尾开始首次出现位置之后所有的字符，包含该字符    位置${var1%%l*} ### 删除变量中，指定字符从末尾开始最后一次出现位置之后所有的字符，包含    该字符位置${var1/l/u} ### 替换变量中，指定字符首次出现的位置${var1//l/u} ### 替换变量中，指定字符所有出现的位置</code></pre><p>例子：</p><pre><code class="hljs">[dongliulin@localhost ~]$ var1=&quot;hello world&quot;[dongliulin@localhost ~]$ echo $var1hello world[dongliulin@localhost ~]$ var2=${var1#*l}[dongliulin@localhost ~]$ echo $var2lo world[dongliulin@localhost ~]$ var2=${var1##*l}[dongliulin@localhost ~]$ echo $var2d[dongliulin@localhost ~]$ var2=${var1%l*}[dongliulin@localhost ~]$ echo $var2hello wor[dongliulin@localhost ~]$ var2=${var1%%l*}[dongliulin@localhost ~]$ echo $var2he[dongliulin@localhost ~]$ var2=${var1/l/u}[dongliulin@localhost ~]$ echo $var2heulo world[dongliulin@localhost ~]$ var2=${var1//l/u}[dongliulin@localhost ~]$ echo $var2heuuo worud</code></pre><p>字符串处理：</p><pre><code class="hljs">${#var1} ### 计算变量的长度`expr length &quot;$var1&quot;` ### 计算变量的长度，使用 expr length 命令，注意反单引号 ````expr index &quot;$var1&quot; ll` ###     计算指定字符在变量中的索引下标，指定为字符串则会拆分为单个字符，返回的是第一个匹配    到的字符的索引下标`expr match &quot;$var1&quot; hello` ###     计算指定字符串在变量中的长度，若存在则返回字符串长度，不存在返回 0     ，必须从变量的头部就要匹配上，才算匹配，即首字符开始匹配${var1:1} ### 截取变量，从指定索引下标开始，注意，使用冒号形式，下标从 0 开始。${var1:1:4} ### 从截取的变量中，再截取前4个字符，即指定截取长度${var1: -1} ### 从变量末尾开始截取，注意冒号后的空格${var1:(-1)} ### 加小括号后，不用加空格${var1:(-5):4} ### 从末尾截取得到截取后的变量，再去前4个字符`expr substr &quot;$var1&quot; 1 2` ### 使用 expr substr     命令截取变量，变量后接，起始索引下标、截取长度，注意此时的下标从 1     开始，与使用冒号不同</code></pre><p>例子：</p><pre><code class="hljs">[dongliulin@localhost ~]$ echo $var1hello world[dongliulin@localhost ~]$ echo ${#var1}11[dongliulin@localhost ~]$ echo `expr length &quot;$var1&quot;`11[dongliulin@localhost ~]$ echo `expr index &quot;$var1&quot; ll`3[dongliulin@localhost ~]$ echo `expr match &quot;$var1&quot; hello`5[dongliulin@localhost ~]$ echo `expr match &quot;$var1&quot; world`0[dongliulin@localhost ~]$ echo ${var1:1}ello world[dongliulin@localhost ~]$ echo ${var1:1:4}ello[dongliulin@localhost ~]$ echo ${var1: -1}d[dongliulin@localhost ~]$ echo ${var1:(-1)}d[dongliulin@localhost ~]$ echo ${var1:(-5):4}worl[dongliulin@localhost ~]$ echo `expr substr &quot;$var1&quot; 1 2`he</code></pre><p>编写测试脚本：</p><pre><code class="hljs">#!/bin/bash#s=&quot;hello world&quot; #定义字符串变量#打印输入提示function print_tips{echo &quot;=====================&quot;echo &quot;string is : $s&quot;echo &quot;(1) 打印字符串的长度&quot;echo &quot;(2) 替换world为home&quot;echo &quot;=====================&quot;}function print_length{echo ${#s}   #输出长度}function replace_world_home{echo ${s/world/home}   #替换字符串}#死循环while truedoprint_tips   #打印提示echoread -p &quot;please input selection in {1|2|q|Q}:&quot; choice       #等待输入，将输入的值存储到 choice 变量中# case 语句，注意结束时，反 case，esaccase $choice in1) print_length;;2) replace_world_home;;q|Q) exit;;*) echo &quot;input error.&quot;;;esacdone</code></pre><p>命令替换：</p><pre><code class="hljs">`date +%Y` ### 使用反单引号，将命令括起来，可直接引用命令的结果，date为系统自带的日期函数，+%Y，表示只显示年份$(date +%Y) ### 作用同上$((365-`date +%j`)) ### $(()) 为计算符号，将计算的表达式放入其中cat /etc/passwd | cut -d &quot;:&quot; -f 1 ### 显示当前系统的用户名，cut 截取命令，-d 指定截取的分隔符，-f 指定取截取后的第几部分ps -ef | grep mysqld | grep -v grep | wc -l  ### grep -v grep 反选筛选 ‘grep’ 后的结果，即去除包含 grep 的信息，wc 统计字符、行数等，-l 表示计算行数，可以得到，mysql 是否启动</code></pre><p>grep 命令在查询时，会自动生成一个 grep 进程，所有要用 -v 操作排除掉</p><p>例子：</p><pre><code class="hljs">#!/bin/bash#echo &quot;this year is `date +%Y` year&quot;echo &quot;this year has passed `date +%j` days&quot;echo &quot;this year has passed $((`date +%j`/7)) weeks&quot;echo &quot;this year has left $((365-`date +%j`)) days&quot;echo &quot;this year has left $((365/7-$((`date +%j`/7)))) weeks&quot;</code></pre><p>例子：<br>启动 mysql 服务，若服务未运行</p><pre><code class="hljs">#!/bin/bash#mysqld_process_count=`ps -ef | grep mysqld | grep -v grep | wc -l`if [ $mysqld_process_count -eq 0 ]; then  ### 注意 if     语句后跟的是中括号，不是小括号，中括号中两端要有空格，使用 fi 结束 if 判断echo &quot;start mysql service&quot; service mysqld startfi</code></pre><p>有类型变量：</p><pre><code class="hljs">declare -i var1 ### 使用 declare 或者 typeset 关键字，进行变量的定义，-i 表示整形，-r 表示只读，-a 表示数组declare -a arr ### 定义一个数组arr=(&quot;join&quot; &quot;the&quot; &quot;pool&quot;) ### 为数组赋值，注意是小括号包围echo ${arr[@]} ### 输出数组中所有值</code></pre><p>expr 进行数学运算:</p><pre><code class="hljs">expr $var1 + $var2 ### 计算两个变量的值，使用 expr 命令，还可以进行大小比较，$(()) 符号只能进行加减乘除</code></pre><p>例子：计算从 1 到所给数值的和</p><pre><code class="hljs">#!/bin/bash#while truedoread -p &quot;please input a number: &quot; num ### 读取命令行参数到 num 变量中if [ $num == &quot;q&quot; ] || [ $num == &quot;Q&quot; ];then ### 退出脚本执行，判断，字符用 “==”     判断，数字用 “-eq”exitfiif [ `expr $num \&lt; 0` -eq 1 ];thenecho &quot;请输入正数&quot;continuefiexpr $num + 1 &amp;&gt;/dev/null   ### 只有整数才能进行加 1 运算，否则，$? 的值不为 0，将运算结果舍弃，输出到 null 的位置，即不存在的位置    if [ $? -ne 0 ];then            echo &quot;请输入整数&quot;            continue    fifor((i=0;i&lt;=$num;i++))   ### for 循环采用 双括号的方式，后接 do 和 done dosum=`expr $sum + $i`doneecho &quot;和为：$sum&quot;sum=0done</code></pre><p>内置计算器 bc：</p><p>可进行浮点型数据运算，^ 表示次方运算、命令行，输入 bc 命令，进入交互式的计算方式</p><pre><code class="hljs">echo &quot;scale=4;$num1/$num2&quot; | bc ### 采用命令行方式使用 bc ，使用管道符号：“|” 将算数表达式传递给 bc 计算器which bc ###  查看 bc 指令的位置</code></pre><p>例子：<br>计算两个浮点数的除法运算</p><pre><code class="hljs">#!/bin/bash#while truedoread -p &quot;please input first number: &quot; num1read -p &quot;please input second number: &quot; num2if [ `expr $num1 \&lt; 0` -eq 1 ] || [ `expr $num2 \&lt; 0` -eq 1 ];thenecho &quot;请输入正数&quot;continuefiecho &quot;scale=4;$num1/$num2&quot; | bcdone</code></pre><p>函数的定义和引用：</p><p>注意：函数体外包围的花括号，必须在单独的一行，不能有函数名等在一行</p><p>方式一：不加 function 关键字，使用函数名（），的方式，表示是一个函数、<br>function_name（）<br>{<br>#函数体、、、<br>}</p><p>方式二：加 function 关键字，使用 function function_name，的方式，不加小括号。<br>function function_name<br>{<br>#函数体<br>}</p><p>例子 ：为 mysql 服务创建守护进程，当 mysql 停止服务时，重启它：</p><pre><code class="hljs">#!/bin/bash#while truedothis_pid=$$ # $$ 代表当前进程，当脚本名和grep 参数名重名时，使用grep -v 过滤掉当前进程#echo $this_pid#ps -ef | grep mysql | grep -v grep | grep -v $this_pid &amp;&gt;/dev/nullprocess_count=`ps -ef | grep mysql | grep -v grep | grep -v $this_pid | wc -l` ###     计算 mysql 服务运行的进程数，小于 0 代表已停止服务if [ $process_count -ne 0 ];then ### 也可以使用 $?判断上一步指令的返回值，返回0 代表成功，1 代表失败echo &quot;mysql is running well.&quot;sleep 5 ###睡眠 5 秒elseecho &quot;mysql is dead,restart it now.&quot;service mysqld restart ### 重启 mysql 服务fidone</code></pre><p>传参：</p><p>默认排序参数为 $1、$2、$3、、、，以此类推，，，，$0 代表的是脚本自身的名字<br>在调用脚本或者函数时，参数之间用空格隔开，脚本或函数中直接使用 上述符号调用传入的参数，无需定义接收。</p><p>例子：</p><pre><code class="hljs">function test_1 {    echo &quot;hello $1&quot; }</code></pre><p>调用 test_1 函数：</p><p>test_1 张三<br>打印输出的是 hello 张三<br>例子：实现传入三个参数，实现计算器功能：</p><pre><code class="hljs">#!/bin/bash##echo &quot;$1 $2 $3 = `expr $1 $2 $3`&quot;echo &quot;$1 $2 $3 = `echo &quot;scale=4;$1 $2 $3&quot; | bc`&quot;  ### 使用 bc     计算器，精度为小数点后 4 位，scale=4；</code></pre><p>执行脚本：</p><pre><code class="hljs">sh example_calc.sh  23.4 \* 4.33  ### 注意，运算符前需加转义符，“\”</code></pre><p>返回值：</p><p>使用 return 或者 echo 返回函数的返回值，return 多用于返回数字，即状态，echo 多用于返回字符串或者数组等</p><p>重构上上个例子：</p><pre><code class="hljs">#!/bin/bash#while truedothis_pid=$$function is_mysql_running ### 定义函数，判断 mysql 服务是否在服{process_count=`ps -ef | grep mysql | grep -v grep | grep -v $this_pid | wc -l`if [ $process_count -ne 0 ];thenreturn ### 返回 0，return 后什么都不加，等价于 return 0elsereturn 1  ### 返回 1fi}function restart_mysql_service  ### 定义函数，重启 mysql 服务{echo &quot;mysql is dead ,restart it now.&quot;service mysqld restart}is_mysql_running &amp;&amp; echo &quot;mysql is running well.&quot; || restart_mysql_service  ###     第一个表达式为 true 则执行最后的代码，否则执行中间的代码sleep 5done</code></pre><p>使用 echo 返回函数值：</p><p>例子：</p><pre><code class="hljs">#!/bin/bash#function get_all_username{echo &quot;`cat /etc/passwd | cut -d: -f1`&quot;  ### 截取 passwd     文件中的所有用户信息的用户名}users=`get_all_username`  ### 调用函数index=1echo $usersfor user in $users   ### for 循环的另一种写法doecho &quot;the $index user name is : $user &quot;index=$(($index + 1))   ### 下标自增done</code></pre><p>变量的作用域：</p><p>在 shell 编程中，脚本中的变量都是全局变量，在函数中，必须在函数调用后，变量才会初始化，使用 local 关键字定义局部变量，local 关键字只能用在函数中</p><pre><code class="hljs">#!/bin/bash#var1=&quot;hello&quot;function local_variable{local var2=&quot;world&quot;}echo $var1echo $var2local_variableecho $var2</code></pre><p>函数库：</p><p>将通用的一些代码提取为函数，封装在同一个文件中，在别的脚本中引入该文件即可调用指定的函数<br>使用 . 路径&#x2F;函数库文件名，的形式调用函数库，注意路径前，使用 标点符号点：“.”，引入文件<br>函数库文件名通常以 .lib 结尾，文件开头以  !&#x2F;bin&#x2F;echo 来开始</p><p>例子：定义一个基本的函数库，base_function：</p><pre><code class="hljs">#!/bin/echo#add(){        echo &quot;`expr $1 + $2`&quot;}sys_load(){        echo &quot;memory is :&quot;        echo        free -m        echo        echo        echo &quot;disk usage:&quot;        df -h        echo        echo}</code></pre><p>引用函数库：引入库文件后，直接以函数名+参数的形式调用指定函数：</p><pre><code class="hljs">#!/bin/bash#. /home/dongliulin/lib/base_function.libadd 1 2sys_load</code></pre><h5 id="find-命令："><a href="#find-命令：" class="headerlink" title="find 命令："></a>find 命令：</h5><p>查找文件或目录等，</p><p>格式 ：find 【路径】【参数】【参数值】【操作】</p><p>当前目录为 ”.“ 可省略 </p><p>find 命令后跟的参数有：</p><ul><li>-name “文件名” ,以名称查找，支持模糊查询，find .&#x2F; -name “example*”</li><li>-size +1M&#x2F;-100k ，以文件大小查找，加号代表大于，减号代表小于</li><li>-mtime 3&#x2F;-3 ，以修改时间查找，正数代表几天之前的所有文件，负数代表几天之内的所有文* 件</li><li>-mmin 30&#x2F;-30，同 -mtime，只是单位是分钟</li><li>-type d&#x2F;f，以文件类型查找，d 代表文件夹，f 代表文件</li><li>-perm 744，查找指定权限的文件</li></ul><p> find 后跟的操作：</p><ul><li>-exec 命令 {} ;， 执行后跟的命令，花括号代表 find 查询的结果，斜杠分号为固定结尾</li><li>-ok 命令 {} ;，同上，只是每次操作都要用户确认，输入 y&#x2F;n 来进行确认</li></ul><p>例子：</p><pre><code class="hljs">find . -name &quot;example*&quot;find ./ -mtime -1find -size +1Mfind -name &quot;nohupnew.*&quot; -exec rm -rf {} \;find -name &quot;nohup.*&quot; -exec cp {} ./nohupnew.out \;find -type f -name &quot;example*&quot; -exec ls -l {} \;</code></pre><p>find、locate、whereis、which 的区别：<br>find 用于全盘搜索，查询较慢，消耗资源<br>locate 默认模糊搜索系统数据库，每日有定时任务更新数据库，手动更新数据库试用：updatedb 命令<br>whereis 只查找二进制文件、帮助文档、源代码<br>which 只查找二进制文件（即可执行程序）</p><h5 id="grep-egrep-命令："><a href="#grep-egrep-命令：" class="headerlink" title="grep &#x2F; egrep 命令："></a>grep &#x2F; egrep 命令：</h5><p>grep 是 global search regular expression and print out the line 的缩写（全局搜索正则表达式并打印匹配行）<br>过滤器，过滤文件内容，</p><p>格式：grep 【参数】【搜索内容】【搜索目标】</p><p>参数：</p><ul><li>-i ，忽略大小写</li><li>-E，匹配正则表达式，等价于 egrep</li><li>-c，对匹配的行数进行统计计数</li><li>-C，连带显示匹配行前后指定行数的内容</li><li>-A，连带显示匹配行之后的指定行数内容</li><li>-B，连带显示匹配行之前的指定行数的内容</li><li>-r，递归操作</li><li>-v，反选</li></ul><p>例子：</p><pre><code class="hljs">grep &#39;echo&#39; example_function.sh grep -i &#39;Echo&#39; example_function.sh grep &#39;echo&#39; example_function.sh  -A 10grep &#39;echo&#39; example_function.sh -cgrep &#39;echo&#39; example_function.sh -C 1grep &#39;echo|function&#39; example_function.sh -Eegrep &#39;echo|function&#39; example_function.sh </code></pre><p>sed 命令（stream editor）：</p><p>格式一：<br>sed 【参数】“pattern 命令” 文件</p><p>格式二：<br>sout | sed 【参数】“pattern 命令”</p><p>参数选项：</p><ul><li>-n ：只匹配 pattern 匹配的行</li><li>-e ：编辑命令，默认的选项，匹配多个 pattern 时，需要显示的指定 -e 参数，一个 * pattern 跟一个 -e</li><li>-f  ：执行保存在文件中的 pattern 和 命令，即将 pattern 和 命令 * 组合成脚本文件，一并执行 </li><li>-r ：支持正则表达式</li><li>-i ：编辑</li></ul><p>例子：</p><p>-n ：</p><pre><code class="hljs">sed &quot;p&quot; sed_test.txt  ### 只用命令，没有 pattern ，命令 p 为打印命令sed &quot;p&quot; sed_test.txt -n ### 只打印匹配的行，此处无 pattern ，则打印所有行sed &#39;/python/p&#39; sed_test.txt  ### /python/ 为指定的 pattern，即需要匹配的字符串，/     / ，为固定格式sed &#39;/python/p&#39; sed_test.txt -n</code></pre><p>-e ：</p><pre><code class="hljs">sed -n -e &quot;/python/p&quot; sed_test.txt  ### 单个 pattern 默认的带有 -e 参数sed -n &quot;/python/p&quot; sed_test.txt  ### 等价于上面sed -n -e &quot;/python/p&quot; -e &quot;/PYTHON/p&quot; sed_test.txt ### 多个 pattern 需要显示指定多个 -e 参数</code></pre><p>-f ：</p><pre><code class="hljs">sed -nf sed_conf.sed sed_test.txt### 将 /python/p 匹配模式和执行命令保存在文件中，通过执行文件执行多个命令，每个命令单独一行</code></pre><p>-r ：</p><pre><code class="hljs">sed -nr &quot;/python|PYTHON/p&quot; sed_test.txt ### -r 支持正则表达式，可以在 pattern 中使用 | 等特殊符号</code></pre><p>-i ：</p><pre><code class="hljs">sed &quot;s/love/like/g&quot; sed_test.txt  ### s///g 是文件编辑命令，查找间隔1的匹配项，替换为间隔2</code></pre><p>pattern 的匹配模式：</p><pre><code class="hljs">sed -n &quot;1,2p&quot; sed_test.txt ### 打印1-2行信息sed -n &quot;3p&quot; sed_test.txt ### 打印第3行信息sed -n &quot;/l/,1p&quot; sed_test.txt ### 打印匹配行及其之后1行的信息sed -n &quot;03,+1p&quot; sed_test.txt ### 打印第三行及其之后的1行信息sed -n &quot;/^i/p&quot; sed_test.txt ### 打印以 i 开头的行信息sed -n &quot;/python/,/PYTHON/p&quot; sed_test.txt ### 打印匹配1开始，到匹配2结束的行信息</code></pre><p>命令选项：<br>执行修改命令时，需加 -i 参数选项，否则只打印结果，不执行</p><ul><li>-p ：打印</li><li>-i ：匹配行之前新建行追加数据</li><li>-a ：匹配行之后新建行追加数据</li><li>-d ：删除匹配的行</li><li>-r ：从外部读入数据插入匹配行下一行</li><li>-w ：将匹配行写入外部文件，若文件已存在，则会覆盖其内容</li></ul><p>例子：</p><pre><code class="hljs">sed -i &quot;/python/a append data&quot; sed_test.txt ### 在匹配行的下一行插入信息sed -i  &quot;/python/i append data&quot; sed_test.txt ### 在匹配行的上一行插入信息sed -i &quot;/append/d&quot; sed_test.txt ### 删除匹配行sed -i &quot;/python/r ./sed_test.txt&quot; sed_test.txt ###     从指定文件读取数据插入匹配行之后的一行sed -i &quot;/python/w ./sed_copy.txt&quot; sed_test.txt ### 读取匹配行数据插入到新的文件中</code></pre><p>sed 编辑修改文件：<br>格式 ：“s&#x2F;pattern&#x2F;要修改为什么&#x2F;g”，g代表全局修改，不带 g 表示修改每行的第一处匹配项，后跟数字代表修改每行的第几个匹配项，i 代表忽略大小写，后跟 数字加g，代表从第几个开始之后全修改</p><pre><code class="hljs">sed &quot;s/love/like/&quot; -in sed_test.txt ### 默认为 1，即只修改每一行第一个匹配项sed &quot;s/love/like/g&quot; -in sed_test.txt ### g 代表全局修改，即 1g，每一行从第一个匹配项开始修改sed &quot;s/love/like/2&quot; -in sed_test.txt ### 指定数字，每行从指定的位置开始修改替换sed &quot;s/love/like/ig&quot; -in sed_test.txt ### i 代表忽略大小写</code></pre><p>反向引用 &amp; 和 \1：<br>使用 &amp; 或 \1 引用 pattern 的值。</p><pre><code class="hljs">sed -in &quot;s/py..../&amp;s/g&quot; sed_test.txt ### 在以 py 开头的单词后追加 s 字母，&amp; 为全量引用，即代表 pattern 本身sed -in &quot;s/\(python\)../\1/g&quot; sed_test.txt ### 去除以 python 为开头的单词的之后所有字母，\1 引用 pattern 中被括号括起来的部分，括号只能出现一次，即 \1 只能使用一次，可以全量引用，也可以部分引用</code></pre><p>脚本中使用 sed 命令，操作变量，要用双引号，否则变量会被当作字符串处理</p><pre><code class="hljs">sed -in &quot;s/$old_str/$new_str/g&quot; sed_test.txt</code></pre><p>使用 sed 进行文件内容查找脚本：<br>输出 my.cnf 文件中的段落名，及每个段落中包含的配置项个数</p><pre><code class="hljs">#!/bin/bash#filePath=./my.cnfgetParts(){echo &quot;`sed -n &quot;/\[/p&quot; $filePath | sed -e &quot;s/\[//g&quot; -e &quot;s/\]//g&quot;`&quot;###     获得每个段落的名称}getItems(){echo &quot;`sed -n &quot;/^\[$1/,/\[.*\]/p&quot; $filePath | egrep -v &quot;^#|^$|^\[&quot; | wc -l`&quot;      ### 对每个段落中的配置项进行统计计数}index=1for part in `getParts`  ### 打印结果doecho &quot;$index : $part `getItems $part`&quot;index=`expr $index + 1`done结果：[root@localhost dongliulin]# ./sed_p.sh 1 : mysqld 52 : server 33 : user 4</code></pre>]]></content>
    
    
    <categories>
      
      <category>Shell</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Shell</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
